
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060)


-- Running command ` 	read_verilog -lib +/ice40/cells_sim.v; 	read_verilog -sv mkeclass_axi4.v axi4_uart_bridge.v uart_tx_minimal.v bram.v mkeclass.v mkriscv.v mkstage1.v mkstage2.v mkstage3.v mkalu.v mkcsrfile.v mkcsr.v RegFile.v SyncResetA.v SyncReset0.v SyncRegister.v SyncFIFO.v SyncHandshake.v FIFO2.v FIFO1.v FIFO10.v FIFO20.v FIFOL1.v MakeClock.v ClockInverter.v module_decoder_func_32.v module_fn_alu.v module_address_valid.v module_chk_interrupt.v module_decode_word32.v; 	hierarchy -top mkeclass_axi4; 	synth_ice40 -top mkeclass_axi4 -json mkeclass_axi4.json ' --

1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: mkeclass_axi4.v
Parsing SystemVerilog input from `mkeclass_axi4.v' to AST representation.
Generating RTLIL representation for module `\mkeclass_axi4'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: axi4_uart_bridge.v
Parsing SystemVerilog input from `axi4_uart_bridge.v' to AST representation.
Generating RTLIL representation for module `\axi4_uart_bridge'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: uart_tx_minimal.v
Parsing SystemVerilog input from `uart_tx_minimal.v' to AST representation.
Generating RTLIL representation for module `\uart_tx_minimal'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: bram.v
Parsing SystemVerilog input from `bram.v' to AST representation.
Generating RTLIL representation for module `\bram'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: mkeclass.v
Parsing SystemVerilog input from `mkeclass.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mkeclass'.
mkeclass.v:842: Warning: Identifier `\EN_sb_clint_msip_put' is implicitly declared.
mkeclass.v:847: Warning: Identifier `\EN_sb_clint_mtip_put' is implicitly declared.
mkeclass.v:852: Warning: Identifier `\EN_sb_clint_mtime_put' is implicitly declared.
mkeclass.v:861: Warning: Identifier `\EN_io_dump_get' is implicitly declared.
mkeclass.v:1039: Warning: Identifier `\riscv_RDY_memory_response_put' is implicitly declared.
mkeclass.v:1246: Warning: Identifier `\sb_clint_msip_put' is implicitly declared.
mkeclass.v:1247: Warning: Identifier `\sb_clint_mtime_put' is implicitly declared.
mkeclass.v:1248: Warning: Identifier `\sb_clint_mtip_put' is implicitly declared.
Note: Assuming pure combinatorial block at mkeclass.v:1306.3-1313.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1314.3-1321.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkeclass.v:1322.3-1345.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: mkriscv.v
Parsing SystemVerilog input from `mkriscv.v' to AST representation.
Generating RTLIL representation for module `\mkriscv'.
mkriscv.v:440: Warning: Identifier `\EN_clint_msip' is implicitly declared.
mkriscv.v:445: Warning: Identifier `\EN_clint_mtip' is implicitly declared.
mkriscv.v:450: Warning: Identifier `\EN_clint_mtime' is implicitly declared.
mkriscv.v:455: Warning: Identifier `\EN_ext_interrupt' is implicitly declared.
mkriscv.v:461: Warning: Identifier `\EN_dump_get' is implicitly declared.
mkriscv.v:1031: Warning: Identifier `\clint_msip_intrpt' is implicitly declared.
mkriscv.v:1032: Warning: Identifier `\clint_mtime_c_mtime' is implicitly declared.
mkriscv.v:1033: Warning: Identifier `\clint_mtip_intrpt' is implicitly declared.
mkriscv.v:1034: Warning: Identifier `\ext_interrupt_intrpt' is implicitly declared.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: mkstage1.v
Parsing SystemVerilog input from `mkstage1.v' to AST representation.
Generating RTLIL representation for module `\mkstage1'.
Note: Assuming pure combinatorial block at mkstage1.v:680.3-689.10 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: mkstage2.v
Parsing SystemVerilog input from `mkstage2.v' to AST representation.
Generating RTLIL representation for module `\mkstage2'.
Note: Assuming pure combinatorial block at mkstage2.v:754.3-760.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:821.3-829.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:830.3-857.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at mkstage2.v:858.3-867.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: mkstage3.v
Parsing SystemVerilog input from `mkstage3.v' to AST representation.
Generating RTLIL representation for module `\mkstage3'.
mkstage3.v:638: Warning: Identifier `\system_instruction_csr_address' is implicitly declared.
mkstage3.v:639: Warning: Identifier `\system_instruction_op1' is implicitly declared.
mkstage3.v:640: Warning: Identifier `\system_instruction_funct3' is implicitly declared.
mkstage3.v:641: Warning: Identifier `\system_instruction' is implicitly declared.
mkstage3.v:642: Warning: Identifier `\RDY_system_instruction' is implicitly declared.
mkstage3.v:645: Warning: Identifier `\take_trap_type_cause' is implicitly declared.
mkstage3.v:646: Warning: Identifier `\take_trap_pc' is implicitly declared.
mkstage3.v:647: Warning: Identifier `\take_trap' is implicitly declared.
mkstage3.v:650: Warning: Identifier `\ext_interrupt_ex_i' is implicitly declared.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: mkalu.v
Parsing SystemVerilog input from `mkalu.v' to AST representation.
Generating RTLIL representation for module `\mkalu'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: mkcsrfile.v
Parsing SystemVerilog input from `mkcsrfile.v' to AST representation.
Generating RTLIL representation for module `\mkcsrfile'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: mkcsr.v
Parsing SystemVerilog input from `mkcsr.v' to AST representation.
Generating RTLIL representation for module `\mkcsr'.
mkcsr.v:74: Warning: Identifier `\csr_EN_ext_interrupt' is implicitly declared.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: RegFile.v
Parsing SystemVerilog input from `RegFile.v' to AST representation.
Generating RTLIL representation for module `\RegFile'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: SyncResetA.v
Parsing SystemVerilog input from `SyncResetA.v' to AST representation.
Generating RTLIL representation for module `\SyncResetA'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: SyncReset0.v
Parsing SystemVerilog input from `SyncReset0.v' to AST representation.
Generating RTLIL representation for module `\SyncReset0'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: SyncRegister.v
Parsing SystemVerilog input from `SyncRegister.v' to AST representation.
Generating RTLIL representation for module `\SyncRegister'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: SyncFIFO.v
Parsing SystemVerilog input from `SyncFIFO.v' to AST representation.
Generating RTLIL representation for module `\SyncFIFO'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: SyncHandshake.v
Parsing SystemVerilog input from `SyncHandshake.v' to AST representation.
Generating RTLIL representation for module `\SyncHandshake'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: FIFO2.v
Parsing SystemVerilog input from `FIFO2.v' to AST representation.
Generating RTLIL representation for module `\FIFO2'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: FIFO1.v
Parsing SystemVerilog input from `FIFO1.v' to AST representation.
Generating RTLIL representation for module `\FIFO1'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: FIFO10.v
Parsing SystemVerilog input from `FIFO10.v' to AST representation.
Generating RTLIL representation for module `\FIFO10'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: FIFO20.v
Parsing SystemVerilog input from `FIFO20.v' to AST representation.
Generating RTLIL representation for module `\FIFO20'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: FIFOL1.v
Parsing SystemVerilog input from `FIFOL1.v' to AST representation.
Generating RTLIL representation for module `\FIFOL1'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: MakeClock.v
Parsing SystemVerilog input from `MakeClock.v' to AST representation.
Generating RTLIL representation for module `\MakeClock'.
Note: Assuming pure combinatorial block at MakeClock.v:99.4-103.9 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: ClockInverter.v
Parsing SystemVerilog input from `ClockInverter.v' to AST representation.
Generating RTLIL representation for module `\ClockInverter'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: module_decoder_func_32.v
Parsing SystemVerilog input from `module_decoder_func_32.v' to AST representation.
Generating RTLIL representation for module `\module_decoder_func_32'.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:200.3-206.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:207.3-214.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:215.3-222.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:223.3-245.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:246.3-253.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:254.3-279.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:280.3-290.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:291.3-306.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:307.3-328.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:329.3-346.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:347.3-355.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:356.3-367.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:368.3-377.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:378.3-387.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:388.3-399.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:400.3-412.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:413.3-429.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:430.3-439.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_decoder_func_32.v:440.3-449.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: module_fn_alu.v
Parsing SystemVerilog input from `module_fn_alu.v' to AST representation.
Generating RTLIL representation for module `\reduced_fn_alu'.
module_fn_alu.v:93: Warning: Identifier `\CASE_fn_alu_fn_2_adder_z_flag6_3_NOT_op1_xor_op2_ETC__simplified' is implicitly declared.
Note: Assuming pure combinatorial block at module_fn_alu.v:136.5-142.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:144.5-158.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:160.5-174.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_fn_alu.v:176.5-183.8 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: module_address_valid.v
Parsing SystemVerilog input from `module_address_valid.v' to AST representation.
Generating RTLIL representation for module `\module_address_valid'.
Note: Assuming pure combinatorial block at module_address_valid.v:59.3-81.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at module_address_valid.v:82.3-102.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: module_chk_interrupt.v
Parsing SystemVerilog input from `module_chk_interrupt.v' to AST representation.
Generating RTLIL representation for module `\module_chk_interrupt'.
Successfully finished Verilog frontend.

31. Executing Verilog-2005 frontend: module_decode_word32.v
Parsing SystemVerilog input from `module_decode_word32.v' to AST representation.
Generating RTLIL representation for module `\module_decode_word32'.
Successfully finished Verilog frontend.

32. Executing HIERARCHY pass (managing design hierarchy).

32.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 \FIFOL1
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 \RegFile
Used module:                 \FIFO2
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_minimal
Parameter \width = 6
Parameter \guarded = 1'1

32.2. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 6
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 41
Parameter \guarded = 1'1

32.3. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 41
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 52
Parameter \guarded = 1'1

32.4. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 52
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 39
Parameter \guarded = 1'1

32.5. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 39
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 70
Parameter \guarded = 1'1

32.6. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 70
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 1
Parameter \guarded = 1'1

32.7. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 1
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 32
Parameter \guarded = 1'1

32.8. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 32
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 1
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1'.
Parameter \width = 6
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1'.
Parameter \width = 41
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 39
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1'.
Parameter \width = 52
Parameter \guarded = 1'1
Found cached RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1'.
Parameter \width = 64

32.9. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 64
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \width = 51

32.10. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 51
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000110011'.
Parameter \width = 38

32.11. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 38
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100110'.
Parameter \width = 62

32.12. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 62
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000111110'.
Parameter \width = 34

32.13. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 34
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000000100010'.
Parameter \width = 64
Found cached RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000000'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111

32.14. Executing AST frontend in derive mode using pre-parsed AST for module `\RegFile'.
Parameter \addr_width = 5
Parameter \data_width = 32
Parameter \lo = 5'00000
Parameter \hi = 5'11111
Generating RTLIL representation for module `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile'.
Parameter \width = 35
Parameter \guarded = 1'1

32.15. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFO2'.
Parameter \width = 35
Parameter \guarded = 1'1
Generating RTLIL representation for module `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1'.
Warning: Replacing memory \mem with list of registers. See FIFO2.v:33
Parameter \width = 70

32.16. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 70
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001000110'.
Parameter \width = 103

32.17. Executing AST frontend in derive mode using pre-parsed AST for module `\FIFOL1'.
Parameter \width = 103
Generating RTLIL representation for module `$paramod\FIFOL1\width=32'00000000000000000000000001100111'.

32.18. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_minimal

32.19. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_minimal
Removing unused module `\module_decode_word32'.
Removing unused module `\reduced_fn_alu'.
Removing unused module `\ClockInverter'.
Removing unused module `\MakeClock'.
Removing unused module `\FIFOL1'.
Removing unused module `\FIFO20'.
Removing unused module `\FIFO10'.
Removing unused module `\FIFO1'.
Removing unused module `\FIFO2'.
Removing unused module `\SyncHandshake'.
Removing unused module `\SyncFIFO'.
Removing unused module `\SyncRegister'.
Removing unused module `\SyncReset0'.
Removing unused module `\SyncResetA'.
Removing unused module `\RegFile'.
Removed 15 unused modules.
Warning: Resizing cell port mkstage3.csr.trap_handler from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.trap_pc from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.trap_cause from 1 bits to 6 bits.
Warning: Resizing cell port mkstage3.csr.csr_rdata from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.csr_wdata from 1 bits to 32 bits.
Warning: Resizing cell port mkstage3.csr.csr_addr from 1 bits to 12 bits.
Warning: Resizing cell port mkeclass.ff_inst_request.D_OUT from 34 bits to 32 bits.
Warning: Resizing cell port mkeclass.ff_inst_request.D_IN from 34 bits to 32 bits.
Warning: Resizing cell port mkeclass_axi4.instr_mem.addr from 14 bits to 32 bits.

33. Executing SYNTH_ICE40 pass.

33.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Replacing existing blackbox module `\SB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:17.1-121.10.
Generating RTLIL representation for module `\SB_IO'.
Replacing existing blackbox module `\SB_GB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:123.1-160.10.
Generating RTLIL representation for module `\SB_GB_IO'.
Replacing existing blackbox module `\SB_GB' at /usr/bin/../share/yosys/ice40/cells_sim.v:162.1-172.10.
Generating RTLIL representation for module `\SB_GB'.
Replacing existing module `\SB_LUT4' at /usr/bin/../share/yosys/ice40/cells_sim.v:177.1-225.10.
Generating RTLIL representation for module `\SB_LUT4'.
Replacing existing module `\SB_CARRY' at /usr/bin/../share/yosys/ice40/cells_sim.v:228.1-260.10.
Generating RTLIL representation for module `\SB_CARRY'.
Replacing existing module `\SB_DFF' at /usr/bin/../share/yosys/ice40/cells_sim.v:265.1-300.10.
Generating RTLIL representation for module `\SB_DFF'.
Replacing existing module `\SB_DFFE' at /usr/bin/../share/yosys/ice40/cells_sim.v:303.1-347.10.
Generating RTLIL representation for module `\SB_DFFE'.
Replacing existing module `\SB_DFFSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:350.1-397.10.
Generating RTLIL representation for module `\SB_DFFSR'.
Replacing existing module `\SB_DFFR' at /usr/bin/../share/yosys/ice40/cells_sim.v:400.1-468.10.
Generating RTLIL representation for module `\SB_DFFR'.
Replacing existing module `\SB_DFFSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:471.1-518.10.
Generating RTLIL representation for module `\SB_DFFSS'.
Replacing existing module `\SB_DFFS' at /usr/bin/../share/yosys/ice40/cells_sim.v:521.1-589.10.
Generating RTLIL representation for module `\SB_DFFS'.
Replacing existing module `\SB_DFFESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:592.1-650.10.
Generating RTLIL representation for module `\SB_DFFESR'.
Replacing existing module `\SB_DFFER' at /usr/bin/../share/yosys/ice40/cells_sim.v:653.1-730.10.
Generating RTLIL representation for module `\SB_DFFER'.
Replacing existing module `\SB_DFFESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:733.1-791.10.
Generating RTLIL representation for module `\SB_DFFESS'.
Replacing existing module `\SB_DFFES' at /usr/bin/../share/yosys/ice40/cells_sim.v:794.1-871.10.
Generating RTLIL representation for module `\SB_DFFES'.
Replacing existing module `\SB_DFFN' at /usr/bin/../share/yosys/ice40/cells_sim.v:876.1-911.10.
Generating RTLIL representation for module `\SB_DFFN'.
Replacing existing module `\SB_DFFNE' at /usr/bin/../share/yosys/ice40/cells_sim.v:914.1-958.10.
Generating RTLIL representation for module `\SB_DFFNE'.
Replacing existing module `\SB_DFFNSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:961.1-1008.10.
Generating RTLIL representation for module `\SB_DFFNSR'.
Replacing existing module `\SB_DFFNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1011.1-1079.10.
Generating RTLIL representation for module `\SB_DFFNR'.
Replacing existing module `\SB_DFFNSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1082.1-1129.10.
Generating RTLIL representation for module `\SB_DFFNSS'.
Replacing existing module `\SB_DFFNS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1132.1-1200.10.
Generating RTLIL representation for module `\SB_DFFNS'.
Replacing existing module `\SB_DFFNESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1203.1-1261.10.
Generating RTLIL representation for module `\SB_DFFNESR'.
Replacing existing module `\SB_DFFNER' at /usr/bin/../share/yosys/ice40/cells_sim.v:1264.1-1341.10.
Generating RTLIL representation for module `\SB_DFFNER'.
Replacing existing module `\SB_DFFNESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1344.1-1402.10.
Generating RTLIL representation for module `\SB_DFFNESS'.
Replacing existing module `\SB_DFFNES' at /usr/bin/../share/yosys/ice40/cells_sim.v:1405.1-1483.10.
Generating RTLIL representation for module `\SB_DFFNES'.
Replacing existing blackbox module `\SB_RAM40_4K' at /usr/bin/../share/yosys/ice40/cells_sim.v:1487.1-1724.10.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Replacing existing blackbox module `\SB_RAM40_4KNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1726.1-1860.10.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Replacing existing blackbox module `\SB_RAM40_4KNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1862.1-1996.10.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Replacing existing blackbox module `\SB_RAM40_4KNRNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1998.1-2132.10.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Replacing existing blackbox module `\ICESTORM_LC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2136.1-2420.10.
Generating RTLIL representation for module `\ICESTORM_LC'.
Replacing existing blackbox module `\SB_PLL40_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2425.1-2453.10.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Replacing existing blackbox module `\SB_PLL40_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2456.1-2484.10.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Replacing existing blackbox module `\SB_PLL40_2_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2487.1-2518.10.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Replacing existing blackbox module `\SB_PLL40_2F_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2521.1-2553.10.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Replacing existing blackbox module `\SB_PLL40_2F_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2556.1-2588.10.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Replacing existing blackbox module `\SB_WARMBOOT' at /usr/bin/../share/yosys/ice40/cells_sim.v:2593.1-2598.10.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Replacing existing blackbox module `\SB_SPRAM256KA' at /usr/bin/../share/yosys/ice40/cells_sim.v:2600.1-2661.10.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Replacing existing blackbox module `\SB_HFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2664.1-2681.10.
Generating RTLIL representation for module `\SB_HFOSC'.
Replacing existing blackbox module `\SB_LFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2684.1-2689.10.
Generating RTLIL representation for module `\SB_LFOSC'.
Replacing existing blackbox module `\SB_RGBA_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2692.1-2706.10.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Replacing existing blackbox module `\SB_LED_DRV_CUR' at /usr/bin/../share/yosys/ice40/cells_sim.v:2709.1-2713.10.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Replacing existing blackbox module `\SB_RGB_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2716.1-2730.10.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Replacing existing blackbox module `\SB_I2C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2733.1-2773.10.
Generating RTLIL representation for module `\SB_I2C'.
Replacing existing blackbox module `\SB_SPI' at /usr/bin/../share/yosys/ice40/cells_sim.v:2776.1-2827.10.
Generating RTLIL representation for module `\SB_SPI'.
Replacing existing blackbox module `\SB_LEDDA_IP' at /usr/bin/../share/yosys/ice40/cells_sim.v:2830.1-2853.10.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Replacing existing blackbox module `\SB_FILTER_50NS' at /usr/bin/../share/yosys/ice40/cells_sim.v:2856.1-2860.10.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Replacing existing blackbox module `\SB_IO_I3C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2862.1-2929.10.
Generating RTLIL representation for module `\SB_IO_I3C'.
Replacing existing blackbox module `\SB_IO_OD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2931.1-2993.10.
Generating RTLIL representation for module `\SB_IO_OD'.
Replacing existing blackbox module `\SB_MAC16' at /usr/bin/../share/yosys/ice40/cells_sim.v:2996.1-3164.10.
Generating RTLIL representation for module `\SB_MAC16'.
Replacing existing blackbox module `\ICESTORM_RAM' at /usr/bin/../share/yosys/ice40/cells_sim.v:3167.1-3502.10.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

33.2. Executing HIERARCHY pass (managing design hierarchy).

33.2.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_minimal

33.2.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Used module:     \mkeclass
Used module:         \mkriscv
Used module:             \mkstage3
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001100111
Used module:                 \mkcsr
Used module:                     \mkcsrfile
Used module:             \mkstage2
Used module:                 $paramod\FIFOL1\width=32'00000000000000000000000001000110
Used module:                 \mkalu
Used module:             \mkstage1
Used module:                 \module_decoder_func_32
Used module:                     \module_address_valid
Used module:                 \module_chk_interrupt
Used module:                 $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile
Used module:                 $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000001000000
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000110011
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000111110
Used module:             $paramod\FIFOL1\width=32'00000000000000000000000000100010
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1
Used module:         $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1
Used module:     \bram
Used module:     \axi4_uart_bridge
Used module:         \uart_tx_minimal
Removed 0 unused modules.

33.3. Executing PROC pass (convert processes to netlists).

33.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `bram.$proc$bram.v:0$190'.
Cleaned up 0 empty switches.

33.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1400 in module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:82$1049 in module module_address_valid.
Marked 1 switch rules as full_case in process $proc$module_address_valid.v:59$1025 in module module_address_valid.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1395 in module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:440$952 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:430$951 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:413$949 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:400$947 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:388$946 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:378$945 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:368$944 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:356$943 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:347$942 in module module_decoder_func_32.
Removed 1 dead cases from process $proc$module_decoder_func_32.v:329$941 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:329$941 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:307$934 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:291$930 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:280$925 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:254$911 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:246$910 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:223$886 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:215$885 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:207$884 in module module_decoder_func_32.
Marked 1 switch rules as full_case in process $proc$module_decoder_func_32.v:200$883 in module module_decoder_func_32.
Removed 1 dead cases from process $proc$FIFO2.v:0$1390 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1390 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1367 in module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$RegFile.v:44$1349 in module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1345 in module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1340 in module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1335 in module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1330 in module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Marked 3 switch rules as full_case in process $proc$FIFOL1.v:74$1325 in module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Removed 1 dead cases from process $proc$FIFO2.v:0$1320 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1320 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1297 in module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1285 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1285 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1262 in module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1250 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1250 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1227 in module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1215 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1215 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1192 in module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1180 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1180 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1157 in module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Removed 1 dead cases from process $proc$FIFO2.v:0$1145 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1145 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1122 in module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$mkcsrfile.v:157$582 in module mkcsrfile.
Marked 1 switch rules as full_case in process $proc$mkalu.v:80$574 in module mkalu.
Removed 1 dead cases from process $proc$mkalu.v:50$562 in module mkalu.
Marked 1 switch rules as full_case in process $proc$mkalu.v:50$562 in module mkalu.
Marked 1 switch rules as full_case in process $proc$mkstage3.v:914$551 in module mkstage3.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:871$401 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:858$400 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:858$400 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:830$399 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:830$399 in module mkstage2.
Removed 1 dead cases from process $proc$mkstage2.v:821$398 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:821$398 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage2.v:754$370 in module mkstage2.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:780$354 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkstage1.v:680$318 in module mkstage1.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1349$261 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1322$258 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1314$257 in module mkeclass.
Marked 1 switch rules as full_case in process $proc$mkeclass.v:1306$256 in module mkeclass.
Marked 2 switch rules as full_case in process $proc$uart_tx_minimal.v:17$183 in module uart_tx_minimal.
Marked 2 switch rules as full_case in process $proc$axi4_uart_bridge.v:25$179 in module axi4_uart_bridge.
Marked 1 switch rules as full_case in process $proc$mkeclass_axi4.v:51$171 in module mkeclass_axi4.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1638 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1627 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1624 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1621 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1618 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1615 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1600 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1589 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1586 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1583 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1580 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1577 in module SB_DFFSR.
Removed 1 dead cases from process $proc$FIFO2.v:0$1110 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 1 switch rules as full_case in process $proc$FIFO2.v:0$1110 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Marked 5 switch rules as full_case in process $proc$FIFO2.v:28$1087 in module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
Removed a total of 13 dead cases.

33.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 11 redundant assignments.
Promoted 106 assignments to connections.

33.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_tx_minimal.$proc$uart_tx_minimal.v:12$186'.
  Set init value: \state = 4'0000
Found init rule in `\uart_tx_minimal.$proc$uart_tx_minimal.v:0$185'.
  Set init value: \tx = 1'1
Found init rule in `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:22$181'.
  Set init value: \baud_counter = 11'00000000000
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1633'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1626'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1620'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1617'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1612'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1606'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1599'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1595'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1588'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1585'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1582'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1579'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1576'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1574'.
  Set init value: \Q = 1'0

33.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
Found async reset \RST_N in `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
Found async reset \RST_N in `\mkalu.$proc$mkalu.v:80$574'.
Found async reset \RST_N in `\mkstage3.$proc$mkstage3.v:914$551'.
Found async reset \RST_N in `\mkstage2.$proc$mkstage2.v:871$401'.
Found async reset \RST_N in `\mkstage1.$proc$mkstage1.v:780$354'.
Found async reset \RST_N in `\mkeclass.$proc$mkeclass.v:1349$261'.
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1624'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1618'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1586'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1580'.
Found async reset \RST in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.

33.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~148 debug messages>

33.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1402'.
     1/1: $0\D_OUT[102:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1400'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:82$1049'.
     1/1: $1\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2[0:0]
Creating decoders for process `\module_address_valid.$proc$module_address_valid.v:59$1025'.
     1/1: $1\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1397'.
     1/1: $0\D_OUT[69:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1395'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$952'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12[1:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$951'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11[1:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$949'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$947'.
     1/1: $1\fn___1__h4290[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$946'.
     1/1: $1\fn___1__h4242[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$945'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10[7:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$944'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9[10:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$943'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8[3:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$942'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$941'.
     1/1: $1\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$934'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$930'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$925'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4[0:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$911'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$910'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$886'.
     1/1: $1\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1[2:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$885'.
     1/1: $1\_theResult_____5_snd__h893[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$884'.
     1/1: $1\_theResult_____5_snd__h948[5:0]
Creating decoders for process `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$883'.
     1/1: $1\x__h260[4:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1390'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1358_DATA[34:0]$1392
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1359_ADDR[0:0]$1380
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1359_DATA[34:0]$1381
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1360_DATA[34:0]$1383
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1360_ADDR[0:0]$1382
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1360_DATA[34:0]$1379
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1360_ADDR[0:0]$1378
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1359_DATA[34:0]$1377
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1359_ADDR[0:0]$1376
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1360_DATA[34:0]$1375
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1360_ADDR[0:0]$1374
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1359_DATA[34:0]$1373
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1359_ADDR[0:0]$1372
    13/17: $0\mem[1][34:0]
    14/17: $0\mem[0][34:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
     1/3: $1$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1355
     2/3: $1$memwr$\reg_file$RegFile.v:45$1348_DATA[31:0]$1354
     3/3: $1$memwr$\reg_file$RegFile.v:45$1348_ADDR[4:0]$1353
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1347'.
     1/1: $0\D_OUT[33:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1345'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1342'.
     1/1: $0\D_OUT[61:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1340'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1337'.
     1/1: $0\D_OUT[37:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1335'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1332'.
     1/1: $0\D_OUT[50:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1330'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1327'.
     1/1: $0\D_OUT[63:0]
Creating decoders for process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1325'.
     1/1: $0\empty_reg[0:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1320'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1288_DATA[31:0]$1322
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1289_ADDR[0:0]$1310
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1289_DATA[31:0]$1311
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1290_DATA[31:0]$1313
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1290_ADDR[0:0]$1312
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1290_DATA[31:0]$1309
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1290_ADDR[0:0]$1308
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1289_DATA[31:0]$1307
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1289_ADDR[0:0]$1306
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1290_DATA[31:0]$1305
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1290_ADDR[0:0]$1304
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1289_DATA[31:0]$1303
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1289_ADDR[0:0]$1302
    13/17: $0\mem[1][31:0]
    14/17: $0\mem[0][31:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1285'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1253_DATA[0:0]$1287
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1254_ADDR[0:0]$1275
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1254_DATA[0:0]$1276
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1255_DATA[0:0]$1278
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1255_ADDR[0:0]$1277
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1255_DATA[0:0]$1274
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1255_ADDR[0:0]$1273
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1254_DATA[0:0]$1272
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1254_ADDR[0:0]$1271
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1255_DATA[0:0]$1270
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1255_ADDR[0:0]$1269
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1254_DATA[0:0]$1268
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1254_ADDR[0:0]$1267
    13/17: $0\mem[1][0:0]
    14/17: $0\mem[0][0:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1250'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1218_DATA[69:0]$1252
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1219_ADDR[0:0]$1240
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1219_DATA[69:0]$1241
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1220_DATA[69:0]$1243
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1220_ADDR[0:0]$1242
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1220_DATA[69:0]$1239
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1220_ADDR[0:0]$1238
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1219_DATA[69:0]$1237
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1219_ADDR[0:0]$1236
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1220_DATA[69:0]$1235
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1220_ADDR[0:0]$1234
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1219_DATA[69:0]$1233
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1219_ADDR[0:0]$1232
    13/17: $0\mem[1][69:0]
    14/17: $0\mem[0][69:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1215'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1183_DATA[38:0]$1217
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1184_ADDR[0:0]$1205
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1184_DATA[38:0]$1206
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1185_DATA[38:0]$1208
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1185_ADDR[0:0]$1207
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1185_DATA[38:0]$1204
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1185_ADDR[0:0]$1203
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1184_DATA[38:0]$1202
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1184_ADDR[0:0]$1201
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1185_DATA[38:0]$1200
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1185_ADDR[0:0]$1199
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1184_DATA[38:0]$1198
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1184_ADDR[0:0]$1197
    13/17: $0\mem[1][38:0]
    14/17: $0\mem[0][38:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1180'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1148_DATA[51:0]$1182
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1149_ADDR[0:0]$1170
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1149_DATA[51:0]$1171
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1150_DATA[51:0]$1173
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1150_ADDR[0:0]$1172
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1150_DATA[51:0]$1169
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1150_ADDR[0:0]$1168
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1149_DATA[51:0]$1167
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1149_ADDR[0:0]$1166
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1150_DATA[51:0]$1165
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1150_ADDR[0:0]$1164
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1149_DATA[51:0]$1163
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1149_ADDR[0:0]$1162
    13/17: $0\mem[1][51:0]
    14/17: $0\mem[0][51:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1145'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1113_DATA[40:0]$1147
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1114_ADDR[0:0]$1135
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1114_DATA[40:0]$1136
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1115_DATA[40:0]$1138
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1115_ADDR[0:0]$1137
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1115_DATA[40:0]$1134
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1115_ADDR[0:0]$1133
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1114_DATA[40:0]$1132
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1114_ADDR[0:0]$1131
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1115_DATA[40:0]$1130
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1115_ADDR[0:0]$1129
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1114_DATA[40:0]$1128
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1114_ADDR[0:0]$1127
    13/17: $0\mem[1][40:0]
    14/17: $0\mem[0][40:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]
Creating decoders for process `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
     1/4: $0\rg_mip[0:0]
     2/4: $0\rg_mie[0:0]
     3/4: $0\rg_mepc[31:0]
     4/4: $0\rg_mcause[3:0]
Creating decoders for process `\mkalu.$proc$mkalu.v:80$574'.
     1/1: $0\RDY_inputs[0:0]
Creating decoders for process `\mkalu.$proc$mkalu.v:68$568'.
Creating decoders for process `\mkalu.$proc$mkalu.v:50$562'.
     1/1: $1\alu_result[31:0]
Creating decoders for process `\mkstage3.$proc$mkstage3.v:914$551'.
     1/3: $0\wr_memory_response[34:0]
     2/3: $0\rg_rerun[0:0]
     3/3: $0\rg_epoch[0:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:871$401'.
     1/2: $0\rg_eEpoch[0:0]
     2/2: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:858$400'.
     1/1: $1\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4[1:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:830$399'.
     1/1: $1\IF_alu_inputs_16_BITS_72_TO_71_21_EQ_0_22_THEN_ETC___d280[48:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:821$398'.
     1/1: $1\_op2__h2304[31:0]
Creating decoders for process `\mkstage2.$proc$mkstage2.v:754$370'.
     1/1: $1\alu_inputs_op3[31:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:780$354'.
     1/8: $0\rg_wfi[0:0]
     2/8: $0\rg_pc[31:0]
     3/8: $0\rg_initialize[0:0]
     4/8: $0\rg_index[4:0]
     5/8: $0\rg_fabric_request[31:0]
     6/8: $0\rg_eEpoch[0:0]
     7/8: $0\rg_action[0:0]
     8/8: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkstage1.$proc$mkstage1.v:680$318'.
     1/1: $1\rg_pc_D_IN[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1349$261'.
     1/1: $0\rg_wEpoch[0:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1322$258'.
     1/1: $1\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3[31:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1314$257'.
     1/1: $1\write_strobe__h2618[3:0]
Creating decoders for process `\mkeclass.$proc$mkeclass.v:1306$256'.
     1/1: $1\w_wdata__h3100[31:0]
Creating decoders for process `\bram.$proc$bram.v:13$187'.
Creating decoders for process `\uart_tx_minimal.$proc$uart_tx_minimal.v:12$186'.
Creating decoders for process `\uart_tx_minimal.$proc$uart_tx_minimal.v:0$185'.
Creating decoders for process `\uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
     1/3: $0\shift_reg[7:0]
     2/3: $0\state[3:0]
     3/3: $0\tx[0:0]
Creating decoders for process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:22$181'.
Creating decoders for process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:25$179'.
     1/1: $0\baud_counter[10:0]
Creating decoders for process `\mkeclass_axi4.$proc$mkeclass_axi4.v:51$171'.
     1/1: $0\led_counter[23:0]
Creating decoders for process `\mkeclass_axi4.$proc$mkeclass_axi4.v:19$170'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1638'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1633'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1627'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1626'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1624'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1621'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1620'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1618'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1617'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1615'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1613'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1612'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1611'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1606'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1600'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1599'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1595'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1589'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1588'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1586'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1585'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1583'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1582'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1580'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1579'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1577'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1576'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1575'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1574'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1573'.
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1110'.
     1/1: $1$mem2reg_rd$\mem$FIFO2.v:22$1078_DATA[5:0]$1112
Creating decoders for process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
     1/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1079_ADDR[0:0]$1100
     2/17: $3$mem2reg_wr$\mem$FIFO2.v:42$1079_DATA[5:0]$1101
     3/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1080_DATA[5:0]$1103
     4/17: $3$mem2reg_wr$\mem$FIFO2.v:51$1080_ADDR[0:0]$1102
     5/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1080_DATA[5:0]$1099
     6/17: $2$mem2reg_wr$\mem$FIFO2.v:51$1080_ADDR[0:0]$1098
     7/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1079_DATA[5:0]$1097
     8/17: $2$mem2reg_wr$\mem$FIFO2.v:42$1079_ADDR[0:0]$1096
     9/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1080_DATA[5:0]$1095
    10/17: $1$mem2reg_wr$\mem$FIFO2.v:51$1080_ADDR[0:0]$1094
    11/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1079_DATA[5:0]$1093
    12/17: $1$mem2reg_wr$\mem$FIFO2.v:42$1079_ADDR[0:0]$1092
    13/17: $0\mem[1][5:0]
    14/17: $0\mem[0][5:0]
    15/17: $0\wptr[0:0]
    16/17: $0\rptr[0:0]
    17/17: $0\count[1:0]

33.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2' from process `\module_address_valid.$proc$module_address_valid.v:82$1049'.
No latch inferred for signal `\module_address_valid.\CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1' from process `\module_address_valid.$proc$module_address_valid.v:59$1025'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$952'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$951'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$949'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4290' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$947'.
No latch inferred for signal `\module_decoder_func_32.\fn___1__h4242' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$946'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$945'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$944'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$943'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$942'.
No latch inferred for signal `\module_decoder_func_32.\IF_decoder_func_32_inst_BITS_6_TO_5_5_EQ_0b0_6_ETC___d143' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$941'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q6' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$934'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$930'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_deco_ETC__q4' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$925'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$911'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$910'.
No latch inferred for signal `\module_decoder_func_32.\CASE_decoder_func_32_inst_BITS_31_TO_7_0_6_0x2_ETC__q1' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$886'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h893' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$885'.
No latch inferred for signal `\module_decoder_func_32.\_theResult_____5_snd__h948' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$884'.
No latch inferred for signal `\module_decoder_func_32.\x__h260' from process `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$883'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1358_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1390'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1288_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1320'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1253_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1285'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1218_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1250'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1183_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1215'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1148_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1180'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1113_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1145'.
No latch inferred for signal `\mkalu.\inputs' from process `\mkalu.$proc$mkalu.v:68$568'.
No latch inferred for signal `\mkalu.\alu_result' from process `\mkalu.$proc$mkalu.v:50$562'.
No latch inferred for signal `\mkstage2.\CASE_aluinputs_BITS_72_TO_71_0_aluinputs_BIT_ETC__q4' from process `\mkstage2.$proc$mkstage2.v:858$400'.
No latch inferred for signal `\mkstage2.\IF_alu_inputs_16_BITS_72_TO_71_21_EQ_0_22_THEN_ETC___d280' from process `\mkstage2.$proc$mkstage2.v:830$399'.
No latch inferred for signal `\mkstage2.\_op2__h2304' from process `\mkstage2.$proc$mkstage2.v:821$398'.
No latch inferred for signal `\mkstage2.\alu_inputs_op3' from process `\mkstage2.$proc$mkstage2.v:754$370'.
No latch inferred for signal `\mkstage1.\rg_pc_D_IN' from process `\mkstage1.$proc$mkstage1.v:680$318'.
No latch inferred for signal `\mkeclass.\CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3' from process `\mkeclass.$proc$mkeclass.v:1322$258'.
No latch inferred for signal `\mkeclass.\write_strobe__h2618' from process `\mkeclass.$proc$mkeclass.v:1314$257'.
No latch inferred for signal `\mkeclass.\w_wdata__h3100' from process `\mkeclass.$proc$mkeclass.v:1306$256'.
No latch inferred for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_rd$\mem$FIFO2.v:22$1078_DATA' from process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1110'.

33.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1402'.
  created $dff cell `$procdff$2867' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001100111.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1400'.
  created $dff cell `$procdff$2868' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1397'.
  created $dff cell `$procdff$2869' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1395'.
  created $dff cell `$procdff$2870' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2871' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2872' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2873' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2874' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2875' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1359_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2876' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1359_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2877' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1360_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2878' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1360_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
  created $adff cell `$procdff$2879' with positive edge clock and positive level reset.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1348_ADDR' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
  created $dff cell `$procdff$2880' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1348_DATA' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
  created $dff cell `$procdff$2881' with positive edge clock.
Creating register for signal `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$memwr$\reg_file$RegFile.v:45$1348_EN' using process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
  created $dff cell `$procdff$2882' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1347'.
  created $dff cell `$procdff$2883' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100010.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1345'.
  created $dff cell `$procdff$2884' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1342'.
  created $dff cell `$procdff$2885' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000111110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1340'.
  created $dff cell `$procdff$2886' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1337'.
  created $dff cell `$procdff$2887' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000100110.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1335'.
  created $dff cell `$procdff$2888' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1332'.
  created $dff cell `$procdff$2889' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000000110011.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1330'.
  created $dff cell `$procdff$2890' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\D_OUT' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1327'.
  created $dff cell `$procdff$2891' with positive edge clock.
Creating register for signal `$paramod\FIFOL1\width=32'00000000000000000000000001000000.\empty_reg' using process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1325'.
  created $dff cell `$procdff$2892' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2893' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2894' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2895' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2896' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2897' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1289_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2898' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1289_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2899' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1290_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2900' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1290_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
  created $adff cell `$procdff$2901' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2902' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2903' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2904' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2905' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2906' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1254_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2907' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1254_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2908' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1255_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2909' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1255_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
  created $adff cell `$procdff$2910' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2911' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2912' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2913' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2914' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2915' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1219_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2916' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1219_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2917' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1220_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2918' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1220_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
  created $adff cell `$procdff$2919' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2920' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2921' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2922' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2923' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2924' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1184_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2925' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1184_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2926' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1185_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2927' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1185_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
  created $adff cell `$procdff$2928' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2929' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2930' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2931' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2932' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2933' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1149_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2934' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1149_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2935' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1150_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2936' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1150_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
  created $adff cell `$procdff$2937' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2938' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2939' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2940' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2941' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2942' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1114_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2943' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1114_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2944' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1115_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2945' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1115_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
  created $adff cell `$procdff$2946' with positive edge clock and positive level reset.
Creating register for signal `\mkcsrfile.\rg_mcause' using process `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
  created $adff cell `$procdff$2947' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mepc' using process `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
  created $adff cell `$procdff$2948' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mie' using process `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
  created $adff cell `$procdff$2949' with positive edge clock and negative level reset.
Creating register for signal `\mkcsrfile.\rg_mip' using process `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
  created $adff cell `$procdff$2950' with positive edge clock and negative level reset.
Creating register for signal `\mkalu.\RDY_inputs' using process `\mkalu.$proc$mkalu.v:80$574'.
  created $adff cell `$procdff$2951' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_epoch' using process `\mkstage3.$proc$mkstage3.v:914$551'.
  created $adff cell `$procdff$2952' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\rg_rerun' using process `\mkstage3.$proc$mkstage3.v:914$551'.
  created $adff cell `$procdff$2953' with positive edge clock and negative level reset.
Creating register for signal `\mkstage3.\wr_memory_response' using process `\mkstage3.$proc$mkstage3.v:914$551'.
  created $adff cell `$procdff$2954' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_wEpoch' using process `\mkstage2.$proc$mkstage2.v:871$401'.
  created $adff cell `$procdff$2955' with positive edge clock and negative level reset.
Creating register for signal `\mkstage2.\rg_eEpoch' using process `\mkstage2.$proc$mkstage2.v:871$401'.
  created $adff cell `$procdff$2956' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wEpoch' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2957' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_action' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2958' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_eEpoch' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2959' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_fabric_request' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2960' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_index' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2961' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_initialize' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2962' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_pc' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2963' with positive edge clock and negative level reset.
Creating register for signal `\mkstage1.\rg_wfi' using process `\mkstage1.$proc$mkstage1.v:780$354'.
  created $adff cell `$procdff$2964' with positive edge clock and negative level reset.
Creating register for signal `\mkeclass.\rg_wEpoch' using process `\mkeclass.$proc$mkeclass.v:1349$261'.
  created $adff cell `$procdff$2965' with positive edge clock and negative level reset.
Creating register for signal `\bram.\rdata' using process `\bram.$proc$bram.v:13$187'.
  created $dff cell `$procdff$2966' with positive edge clock.
Creating register for signal `\uart_tx_minimal.\tx' using process `\uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
  created $dff cell `$procdff$2967' with positive edge clock.
Creating register for signal `\uart_tx_minimal.\state' using process `\uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
  created $dff cell `$procdff$2968' with positive edge clock.
Creating register for signal `\uart_tx_minimal.\shift_reg' using process `\uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
  created $dff cell `$procdff$2969' with positive edge clock.
Creating register for signal `\axi4_uart_bridge.\baud_counter' using process `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:25$179'.
  created $dff cell `$procdff$2970' with positive edge clock.
Creating register for signal `\mkeclass_axi4.\led_counter' using process `\mkeclass_axi4.$proc$mkeclass_axi4.v:51$171'.
  created $dff cell `$procdff$2971' with positive edge clock.
Creating register for signal `\mkeclass_axi4.\reset_sync' using process `\mkeclass_axi4.$proc$mkeclass_axi4.v:19$170'.
  created $dff cell `$procdff$2972' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645'.
  created $adff cell `$procdff$2973' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1638'.
  created $dff cell `$procdff$2974' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634'.
  created $adff cell `$procdff$2975' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1627'.
  created $dff cell `$procdff$2976' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1624'.
  created $adff cell `$procdff$2977' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1621'.
  created $dff cell `$procdff$2978' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1618'.
  created $adff cell `$procdff$2979' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1615'.
  created $dff cell `$procdff$2980' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1613'.
  created $dff cell `$procdff$2981' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1611'.
  created $dff cell `$procdff$2982' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607'.
  created $adff cell `$procdff$2983' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1600'.
  created $dff cell `$procdff$2984' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596'.
  created $adff cell `$procdff$2985' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1589'.
  created $dff cell `$procdff$2986' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1586'.
  created $adff cell `$procdff$2987' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1583'.
  created $dff cell `$procdff$2988' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1580'.
  created $adff cell `$procdff$2989' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1577'.
  created $dff cell `$procdff$2990' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1575'.
  created $dff cell `$procdff$2991' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1573'.
  created $dff cell `$procdff$2992' with positive edge clock.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\count' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2993' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\rptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2994' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\wptr' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2995' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\mem[0]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2996' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.\mem[1]' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2997' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1079_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2998' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:42$1079_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$2999' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1080_ADDR' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$3000' with positive edge clock and positive level reset.
Creating register for signal `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$mem2reg_wr$\mem$FIFO2.v:51$1080_DATA' using process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
  created $adff cell `$procdff$3001' with positive edge clock and positive level reset.

33.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

33.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1402'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:97$1402'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1400'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001100111.$proc$FIFOL1.v:74$1400'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:82$1049'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:82$1049'.
Found and cleaned up 1 empty switch in `\module_address_valid.$proc$module_address_valid.v:59$1025'.
Removing empty process `module_address_valid.$proc$module_address_valid.v:59$1025'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1397'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:97$1397'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1395'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000110.$proc$FIFOL1.v:74$1395'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:440$952'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:440$952'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:430$951'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:430$951'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:413$949'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:413$949'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:400$947'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:400$947'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:388$946'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:388$946'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:378$945'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:378$945'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:368$944'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:368$944'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:356$943'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:356$943'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:347$942'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:347$942'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:329$941'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:329$941'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:307$934'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:307$934'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:291$930'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:291$930'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:280$925'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:280$925'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:254$911'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:254$911'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:246$910'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:246$910'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:223$886'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:223$886'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:215$885'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:215$885'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:207$884'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:207$884'.
Found and cleaned up 1 empty switch in `\module_decoder_func_32.$proc$module_decoder_func_32.v:200$883'.
Removing empty process `module_decoder_func_32.$proc$module_decoder_func_32.v:200$883'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1390'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:0$1390'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.$proc$FIFO2.v:28$1367'.
Found and cleaned up 1 empty switch in `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
Removing empty process `$paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.$proc$RegFile.v:44$1349'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1347'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:97$1347'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1345'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100010.$proc$FIFOL1.v:74$1345'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1342'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:97$1342'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1340'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000111110.$proc$FIFOL1.v:74$1340'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1337'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:97$1337'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1335'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000100110.$proc$FIFOL1.v:74$1335'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1332'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:97$1332'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1330'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000000110011.$proc$FIFOL1.v:74$1330'.
Found and cleaned up 1 empty switch in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1327'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:97$1327'.
Found and cleaned up 4 empty switches in `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1325'.
Removing empty process `$paramod\FIFOL1\width=32'00000000000000000000000001000000.$proc$FIFOL1.v:74$1325'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1320'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:0$1320'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.$proc$FIFO2.v:28$1297'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1285'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:0$1285'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.$proc$FIFO2.v:28$1262'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1250'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:0$1250'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.$proc$FIFO2.v:28$1227'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1215'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:0$1215'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.$proc$FIFO2.v:28$1192'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1180'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:0$1180'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.$proc$FIFO2.v:28$1157'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1145'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:0$1145'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.$proc$FIFO2.v:28$1122'.
Found and cleaned up 3 empty switches in `\mkcsrfile.$proc$mkcsrfile.v:157$582'.
Removing empty process `mkcsrfile.$proc$mkcsrfile.v:157$582'.
Removing empty process `mkalu.$proc$mkalu.v:80$574'.
Removing empty process `mkalu.$proc$mkalu.v:68$568'.
Found and cleaned up 1 empty switch in `\mkalu.$proc$mkalu.v:50$562'.
Removing empty process `mkalu.$proc$mkalu.v:50$562'.
Found and cleaned up 3 empty switches in `\mkstage3.$proc$mkstage3.v:914$551'.
Removing empty process `mkstage3.$proc$mkstage3.v:914$551'.
Found and cleaned up 2 empty switches in `\mkstage2.$proc$mkstage2.v:871$401'.
Removing empty process `mkstage2.$proc$mkstage2.v:871$401'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:858$400'.
Removing empty process `mkstage2.$proc$mkstage2.v:858$400'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:830$399'.
Removing empty process `mkstage2.$proc$mkstage2.v:830$399'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:821$398'.
Removing empty process `mkstage2.$proc$mkstage2.v:821$398'.
Found and cleaned up 1 empty switch in `\mkstage2.$proc$mkstage2.v:754$370'.
Removing empty process `mkstage2.$proc$mkstage2.v:754$370'.
Found and cleaned up 8 empty switches in `\mkstage1.$proc$mkstage1.v:780$354'.
Removing empty process `mkstage1.$proc$mkstage1.v:780$354'.
Found and cleaned up 1 empty switch in `\mkstage1.$proc$mkstage1.v:680$318'.
Removing empty process `mkstage1.$proc$mkstage1.v:680$318'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1349$261'.
Removing empty process `mkeclass.$proc$mkeclass.v:1349$261'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1322$258'.
Removing empty process `mkeclass.$proc$mkeclass.v:1322$258'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1314$257'.
Removing empty process `mkeclass.$proc$mkeclass.v:1314$257'.
Found and cleaned up 1 empty switch in `\mkeclass.$proc$mkeclass.v:1306$256'.
Removing empty process `mkeclass.$proc$mkeclass.v:1306$256'.
Removing empty process `bram.$proc$bram.v:13$187'.
Removing empty process `uart_tx_minimal.$proc$uart_tx_minimal.v:12$186'.
Removing empty process `uart_tx_minimal.$proc$uart_tx_minimal.v:0$185'.
Found and cleaned up 4 empty switches in `\uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
Removing empty process `uart_tx_minimal.$proc$uart_tx_minimal.v:17$183'.
Removing empty process `axi4_uart_bridge.$proc$axi4_uart_bridge.v:22$181'.
Found and cleaned up 2 empty switches in `\axi4_uart_bridge.$proc$axi4_uart_bridge.v:25$179'.
Removing empty process `axi4_uart_bridge.$proc$axi4_uart_bridge.v:25$179'.
Found and cleaned up 1 empty switch in `\mkeclass_axi4.$proc$mkeclass_axi4.v:51$171'.
Removing empty process `mkeclass_axi4.$proc$mkeclass_axi4.v:51$171'.
Removing empty process `mkeclass_axi4.$proc$mkeclass_axi4.v:19$170'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$1645'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1638'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$1638'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$1634'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1633'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1627'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$1627'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1626'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$1624'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1621'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$1621'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1620'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$1618'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1617'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1615'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$1615'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1614'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1613'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$1613'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1612'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$1611'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1610'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$1607'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1606'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1600'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$1600'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1599'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$1596'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1595'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1589'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$1589'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1588'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$1586'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1585'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1583'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$1583'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1582'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$1580'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1579'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1577'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$1577'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1576'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1575'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$1575'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1574'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1573'.
Found and cleaned up 1 empty switch in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1110'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:0$1110'.
Found and cleaned up 4 empty switches in `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
Removing empty process `$paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.$proc$FIFO2.v:28$1087'.
Cleaned up 148 empty switches.

33.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
<suppressed ~2 debug messages>
Optimizing module module_chk_interrupt.
<suppressed ~2 debug messages>
Optimizing module module_address_valid.
<suppressed ~8 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
<suppressed ~2 debug messages>
Optimizing module module_decoder_func_32.
<suppressed ~27 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
<suppressed ~2 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
<suppressed ~6 debug messages>
Optimizing module mkcsr.
Optimizing module mkcsrfile.
Optimizing module mkalu.
<suppressed ~3 debug messages>
Optimizing module mkstage3.
<suppressed ~13 debug messages>
Optimizing module mkstage2.
<suppressed ~6 debug messages>
Optimizing module mkstage1.
<suppressed ~5 debug messages>
Optimizing module mkriscv.
Optimizing module mkeclass.
<suppressed ~12 debug messages>
Optimizing module bram.
Optimizing module uart_tx_minimal.
<suppressed ~2 debug messages>
Optimizing module axi4_uart_bridge.
Optimizing module mkeclass_axi4.
Optimizing module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
<suppressed ~6 debug messages>

33.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001100111.
Deleting now unused module module_chk_interrupt.
Deleting now unused module module_address_valid.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000110.
Deleting now unused module module_decoder_func_32.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100011\guarded=1'1.
Deleting now unused module $paramod$56698b439944c97e9107048cd4226f712af1b2b1\RegFile.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100010.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000111110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000100110.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000000110011.
Deleting now unused module $paramod\FIFOL1\width=32'00000000000000000000000001000000.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100000\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000001\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000001000110\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000100111\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000110100\guarded=1'1.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000101001\guarded=1'1.
Deleting now unused module mkcsr.
Deleting now unused module mkcsrfile.
Deleting now unused module mkalu.
Deleting now unused module mkstage3.
Deleting now unused module mkstage2.
Deleting now unused module mkstage1.
Deleting now unused module mkriscv.
Deleting now unused module mkeclass.
Deleting now unused module bram.
Deleting now unused module uart_tx_minimal.
Deleting now unused module axi4_uart_bridge.
Deleting now unused module $paramod\FIFO2\width=32'00000000000000000000000000000110\guarded=1'1.
<suppressed ~39 debug messages>

33.5. Executing TRIBUF pass.

33.6. Executing DEMINOUT pass (demote inout ports to input or output).

33.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~453 debug messages>

33.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 429 unused cells and 1907 unused wires.
<suppressed ~578 debug messages>

33.9. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.dump_ff.DEQ is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csr_wen is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.write_csr_addr [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.write_csr_word [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csr_EN_ext_interrupt is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr.csrfile.ext_interrupt_ex_i is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [63] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [62] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [61] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [60] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [59] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [58] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [57] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [56] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [55] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [54] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [53] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [52] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [51] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [50] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [49] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [48] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [47] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [46] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [45] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [44] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [43] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [42] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [41] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [40] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [39] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [38] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [37] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [36] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [35] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [34] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [33] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [32] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [31] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [30] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [29] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [28] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [27] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [26] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [25] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [24] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [23] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [22] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [21] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [20] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [19] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [18] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [16] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [15] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [14] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [13] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [12] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_take_trap [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage3.csr_system_instruction [64] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_csrs [45] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_csrs [52] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_prv [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_prv [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mstatus [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mip [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [11] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [10] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [9] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [8] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [7] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [6] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [5] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [4] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [3] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [2] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [1] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv.stage1.instance_chk_interrupt_0.chk_interrupt_mie [0] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.fetch_xactor_f_rd_addr.D_IN [17] is used but has no driver.
Warning: Wire mkeclass_axi4.\cpu.riscv_mv_trap is used but has no driver.
Found and reported 134 problems.

33.10. Executing OPT pass (performing simple optimizations).

33.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~3 debug messages>

33.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~759 debug messages>
Removed a total of 253 cells.

33.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950: { 1'1 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [14:12] } -> { 2'11 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13:12] }
  Analyzing evaluation results.
    dead port 1/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2634.
    dead port 2/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2634.
    dead port 3/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2634.
    dead port 5/5 on $pmux $flatten\cpu.\riscv.\stage2.$procmux$2634.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage2.$ternary$mkstage2.v:811$391.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage2.$ternary$mkstage2.v:811$391.
Removed 6 multiplexer ports.
<suppressed ~128 debug messages>

33.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2395: $auto$opt_reduce.cc:134:opt_pmux$3004
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2402: $auto$opt_reduce.cc:134:opt_pmux$3006
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2484: $auto$opt_reduce.cc:134:opt_pmux$3008
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2491: $auto$opt_reduce.cc:134:opt_pmux$3010
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2573: $auto$opt_reduce.cc:134:opt_pmux$3012
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2580: $auto$opt_reduce.cc:134:opt_pmux$3014
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2846: $auto$opt_reduce.cc:134:opt_pmux$3016
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2853: $auto$opt_reduce.cc:134:opt_pmux$3018
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2484: $auto$opt_reduce.cc:134:opt_pmux$3020
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2491: $auto$opt_reduce.cc:134:opt_pmux$3022
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1965: $auto$opt_reduce.cc:134:opt_pmux$3024
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1972: $auto$opt_reduce.cc:134:opt_pmux$3026
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2395: $auto$opt_reduce.cc:134:opt_pmux$3028
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2402: $auto$opt_reduce.cc:134:opt_pmux$3030
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2306: $auto$opt_reduce.cc:134:opt_pmux$3032
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2217: $auto$opt_reduce.cc:134:opt_pmux$3034
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2224: $auto$opt_reduce.cc:134:opt_pmux$3036
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$procmux$1987:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352
      New ports: A=1'0, B=1'1, Y=$flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0]
      New connections: $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [31:1] = { $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$0$memwr$\reg_file$RegFile.v:45$1348_EN[31:0]$1352 [0] }
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2128: $auto$opt_reduce.cc:134:opt_pmux$3038
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2135: $auto$opt_reduce.cc:134:opt_pmux$3040
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2313: $auto$opt_reduce.cc:134:opt_pmux$3042
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 21 changes.

33.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

33.10.6. Executing OPT_DFF pass (perform DFF optimizations).

33.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 332 unused wires.
<suppressed ~83 debug messages>

33.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.10.9. Rerunning OPT passes. (Maybe there is more to do..)

33.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

33.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2462: $auto$opt_reduce.cc:134:opt_pmux$3044
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2474: $auto$opt_reduce.cc:134:opt_pmux$3046
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2373: $auto$opt_reduce.cc:134:opt_pmux$3048
    New ctrl vector for $pmux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2385: $auto$opt_reduce.cc:134:opt_pmux$3050
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2195: $auto$opt_reduce.cc:134:opt_pmux$3052
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2207: $auto$opt_reduce.cc:134:opt_pmux$3054
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2106: $auto$opt_reduce.cc:134:opt_pmux$3056
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_request.$procmux$2118: $auto$opt_reduce.cc:134:opt_pmux$3058
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2284: $auto$opt_reduce.cc:134:opt_pmux$3060
    New ctrl vector for $pmux cell $flatten\cpu.\ff_mem_request.$procmux$2296: $auto$opt_reduce.cc:134:opt_pmux$3062
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2373: $auto$opt_reduce.cc:134:opt_pmux$3064
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2385: $auto$opt_reduce.cc:134:opt_pmux$3066
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2462: $auto$opt_reduce.cc:134:opt_pmux$3068
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2474: $auto$opt_reduce.cc:134:opt_pmux$3070
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2551: $auto$opt_reduce.cc:134:opt_pmux$3072
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2563: $auto$opt_reduce.cc:134:opt_pmux$3074
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2824: $auto$opt_reduce.cc:134:opt_pmux$3076
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2836: $auto$opt_reduce.cc:134:opt_pmux$3078
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1943: $auto$opt_reduce.cc:134:opt_pmux$3080
    New ctrl vector for $pmux cell $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1955: $auto$opt_reduce.cc:134:opt_pmux$3082
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 20 changes.

33.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

33.10.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\cpu.\riscv.\stage3.\csr.\csrfile.$procdff$2949 ($adff) from module mkeclass_axi4 (removing D path).
Setting constant 0-bit at position 0 on $flatten\cpu.\riscv.\stage3.\csr.\csrfile.$procdff$2949 ($dlatch) from module mkeclass_axi4.

33.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

33.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~5 debug messages>

33.10.16. Rerunning OPT passes. (Maybe there is more to do..)

33.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~129 debug messages>

33.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.10.20. Executing OPT_DFF pass (perform DFF optimizations).

33.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 4 unused cells and 12 unused wires.
<suppressed ~13 debug messages>

33.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.10.23. Rerunning OPT passes. (Maybe there is more to do..)

33.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

33.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.10.27. Executing OPT_DFF pass (perform DFF optimizations).

33.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.10.30. Finished OPT passes. (There is nothing left to do.)

33.11. Executing FSM pass (extract and optimize FSM).

33.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking mkeclass_axi4.cpu.memory_xactor_f_rd_data.mem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_rd_data.mem[1] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_wr_resp.mem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.cpu.memory_xactor_f_wr_resp.mem[1] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking mkeclass_axi4.uart_bridge.u_uart_tx.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

33.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

33.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

33.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

33.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

33.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

33.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

33.12. Executing OPT pass (performing simple optimizations).

33.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

33.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$2971 ($dff) from module mkeclass_axi4 (D = $add$mkeclass_axi4.v:53$172_Y [23:0], Q = \led_counter, rval = 24'000000000000000000000000).
Adding EN signal on $flatten\uart_bridge.\u_uart_tx.$procdff$2969 ($dff) from module mkeclass_axi4 (D = \cpu.memory_xactor_f_wr_data.D_OUT [16:9], Q = \uart_bridge.u_uart_tx.shift_reg).
Adding EN signal on $flatten\uart_bridge.\u_uart_tx.$procdff$2968 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$0\state[3:0], Q = \uart_bridge.u_uart_tx.state).
Adding EN signal on $flatten\uart_bridge.\u_uart_tx.$procdff$2967 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$0\tx[0:0], Q = \uart_bridge.u_uart_tx.tx).
Adding SRST signal on $flatten\uart_bridge.$procdff$2970 ($dff) from module mkeclass_axi4 (D = $flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180_Y [10:0], Q = \uart_bridge.baud_counter, rval = 11'00000000000).
Adding SRST signal on $flatten\cpu.\riscv.\stage3.\dump_ff.$procdff$2868 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage3.\dump_ff.$procmux$1790_Y, Q = \cpu.riscv.stage3.dump_ff.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3106 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage3.\dump_ff.$procmux$1790_Y, Q = \cpu.riscv.stage3.dump_ff.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\stage3.$procdff$2953 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage3.rg_rerun_D_IN, Q = \cpu.riscv.stage3.rg_rerun).
Adding EN signal on $flatten\cpu.\riscv.\stage3.$procdff$2952 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage3.rg_epoch_D_IN, Q = \cpu.riscv.stage3.rg_epoch).
Adding SRST signal on $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procdff$2870 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procmux$1811_Y, Q = \cpu.riscv.stage2.ff_memory_request.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3112 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procmux$1811_Y, Q = \cpu.riscv.stage2.ff_memory_request.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\stage2.\ff_memory_request.$procdff$2869 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2_mv_redirection_fst \cpu.riscv.stage2.alu.inputs_op2 \cpu.riscv.fifof_2.D_OUT [40:39] \cpu.riscv.fifof_2.D_OUT [2:0] \cpu.riscv.stage2.rg_wEpoch }, Q = \cpu.riscv.stage2.ff_memory_request.D_OUT).
Adding EN signal on $flatten\cpu.\riscv.\stage2.$procdff$2956 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage2.rg_eEpoch_D_IN, Q = \cpu.riscv.stage2.rg_eEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage2.$procdff$2955 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage2.rg_wEpoch_D_IN, Q = \cpu.riscv.stage2.rg_wEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2875 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.ff_memory_response.D_IN, Q = \cpu.riscv.stage1.ff_memory_response.mem[1]).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2874 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.ff_memory_response.D_IN, Q = \cpu.riscv.stage1.ff_memory_response.mem[0]).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2873 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384_Y [0], Q = \cpu.riscv.stage1.ff_memory_response.wptr).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2872 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386_Y [0], Q = \cpu.riscv.stage1.ff_memory_response.rptr).
Adding EN signal on $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procdff$2871 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\ff_memory_response.$0\count[1:0], Q = \cpu.riscv.stage1.ff_memory_response.count).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2964 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_wfi_D_IN, Q = \cpu.riscv.stage1.rg_wfi).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2963 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_pc_D_IN, Q = \cpu.riscv.stage1.rg_pc).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2962 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.riscv.stage1.rg_initialize).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2961 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_index_D_IN, Q = \cpu.riscv.stage1.rg_index).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2960 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_fabric_request_D_IN, Q = \cpu.riscv.stage1.rg_fabric_request).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2959 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_eEpoch_D_IN, Q = \cpu.riscv.stage1.rg_eEpoch).
Adding EN signal on $flatten\cpu.\riscv.\stage1.$procdff$2957 ($adff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_wEpoch_D_IN, Q = \cpu.riscv.stage1.rg_wEpoch).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_6.$procdff$2892 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_6.$procmux$2052_Y, Q = \cpu.riscv.fifof_6.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3143 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_6.$procmux$2052_Y, Q = \cpu.riscv.fifof_6.empty_reg).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_5.$procdff$2892 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_5.$procmux$2052_Y, Q = \cpu.riscv.fifof_5.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3147 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_5.$procmux$2052_Y, Q = \cpu.riscv.fifof_5.empty_reg).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_4.$procdff$2890 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_4.$procmux$2039_Y, Q = \cpu.riscv.fifof_4.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3151 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_4.$procmux$2039_Y, Q = \cpu.riscv.fifof_4.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_4.$procdff$2889 ($dff) from module mkeclass_axi4 (D = { 28'0010101010101010101010101010 \cpu.riscv.fifof_2.D_OUT [61:39] }, Q = \cpu.riscv.fifof_4.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_3.$procdff$2888 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_3.$procmux$2026_Y, Q = \cpu.riscv.fifof_3.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3156 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_3.$procmux$2026_Y, Q = \cpu.riscv.fifof_3.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_3.$procdff$2887 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.fifof_1.D_OUT [31:0] \cpu.riscv.fifof_2.D_OUT [51:47] \cpu.riscv.stage2.rg_wEpoch }, Q = \cpu.riscv.fifof_3.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_2.$procdff$2886 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_2.$procmux$2013_Y, Q = \cpu.riscv.fifof_2.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3161 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_2.$procmux$2013_Y, Q = \cpu.riscv.fifof_2.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_2.$procdff$2885 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.integer_rf_rf.ADDR_2 \cpu.riscv.stage1.integer_rf_rf.ADDR_1 \cpu.riscv.stage1.instance_decoder_func_32_1.x__h260 \cpu.riscv.fifof_2.D_IN [46] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b0_1_0b_ETC__q11 \cpu.riscv.stage1.IF_chk_interrupt_7_BIT_1_8_OR_ff_memory_respon_ETC___d68 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b11_3_0_ETC__q12 \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 \cpu.riscv.stage1.x1_avValue_meta_funct__h2931 }, Q = \cpu.riscv.fifof_2.D_OUT).
Adding SRST signal on $auto$ff.cc:266:slice$3165 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221 [3], Q = \cpu.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$3165 ($dffe) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [31] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q9 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [7:5] }, Q = \cpu.riscv.fifof_2.D_OUT [38:24], rval = 15'000000000000000).
Adding SRST signal on $auto$ff.cc:266:slice$3165 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [11:7], Q = \cpu.riscv.fifof_2.D_OUT [51:47], rval = 5'00000).
Adding SRST signal on $auto$ff.cc:266:slice$3165 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1._theResult___fst__h3006 [5], Q = \cpu.riscv.fifof_2.D_OUT [5], rval = 1'1).
Adding SRST signal on $flatten\cpu.\riscv.\fifof_1.$procdff$2884 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_1.$procmux$2000_Y, Q = \cpu.riscv.fifof_1.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3173 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof_1.$procmux$2000_Y, Q = \cpu.riscv.fifof_1.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof_1.$procdff$2883 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch \cpu.riscv.stage1.rg_pc }, Q = \cpu.riscv.fifof_1.D_OUT).
Adding SRST signal on $flatten\cpu.\riscv.\fifof.$procdff$2892 ($dff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof.$procmux$2052_Y, Q = \cpu.riscv.fifof.empty_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$3178 ($sdff) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\fifof.$procmux$2052_Y, Q = \cpu.riscv.fifof.empty_reg).
Adding EN signal on $flatten\cpu.\riscv.\fifof.$procdff$2891 ($dff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.x__h3155 \cpu.riscv.stage1.x__h3181 }, Q = \cpu.riscv.fifof.D_OUT).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2997 ($adff) from module mkeclass_axi4 (D = 6'000000, Q = \cpu.memory_xactor_f_wr_resp.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2996 ($adff) from module mkeclass_axi4 (D = 6'000000, Q = \cpu.memory_xactor_f_wr_resp.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2995 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:43$1104_Y [0], Q = \cpu.memory_xactor_f_wr_resp.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2994 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:47$1106_Y [0], Q = \cpu.memory_xactor_f_wr_resp.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_resp.$procdff$2993 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_resp.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_resp.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2942 ($adff) from module mkeclass_axi4 (D = { \cpu.w_wdata__h3100 \cpu.w_wstrb__h3101 5'00001 }, Q = \cpu.memory_xactor_f_wr_data.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2941 ($adff) from module mkeclass_axi4 (D = { \cpu.w_wdata__h3100 \cpu.w_wstrb__h3101 5'00001 }, Q = \cpu.memory_xactor_f_wr_data.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2940 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139_Y [0], Q = \cpu.memory_xactor_f_wr_data.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2939 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141_Y [0], Q = \cpu.memory_xactor_f_wr_data.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_data.$procdff$2938 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_data.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_data.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2933 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] 12'001000000000 \cpu.riscv.stage2.ff_memory_request.D_OUT [2:1] 6'010000 }, Q = \cpu.memory_xactor_f_wr_addr.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2932 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] 12'001000000000 \cpu.riscv.stage2.ff_memory_request.D_OUT [2:1] 6'010000 }, Q = \cpu.memory_xactor_f_wr_addr.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2931 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174_Y [0], Q = \cpu.memory_xactor_f_wr_addr.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2930 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176_Y [0], Q = \cpu.memory_xactor_f_wr_addr.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_wr_addr.$procdff$2929 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_wr_addr.$0\count[1:0], Q = \cpu.memory_xactor_f_wr_addr.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2924 ($adff) from module mkeclass_axi4 (D = 39'000000000000000000000000000000000010000, Q = \cpu.memory_xactor_f_rd_data.mem[1]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2923 ($adff) from module mkeclass_axi4 (D = 39'000000000000000000000000000000000010000, Q = \cpu.memory_xactor_f_rd_data.mem[0]).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2922 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209_Y [0], Q = \cpu.memory_xactor_f_rd_data.wptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2921 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211_Y [0], Q = \cpu.memory_xactor_f_rd_data.rptr).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_data.$procdff$2920 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_data.$0\count[1:0], Q = \cpu.memory_xactor_f_rd_data.count).
Adding EN signal on $flatten\cpu.\memory_xactor_f_rd_addr.$procdff$2929 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\memory_xactor_f_rd_addr.$0\count[1:0], Q = \cpu.memory_xactor_f_rd_addr.count).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2915 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] \cpu.w_wdata__h3100 \cpu.riscv.stage2.ff_memory_request.D_OUT [5:0] }, Q = \cpu.ff_mem_request.mem[1]).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2914 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage2.ff_memory_request.D_OUT [69:38] \cpu.w_wdata__h3100 \cpu.riscv.stage2.ff_memory_request.D_OUT [5:0] }, Q = \cpu.ff_mem_request.mem[0]).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2913 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244_Y [0], Q = \cpu.ff_mem_request.wptr).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2912 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246_Y [0], Q = \cpu.ff_mem_request.rptr).
Adding EN signal on $flatten\cpu.\ff_mem_request.$procdff$2911 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_mem_request.$0\count[1:0], Q = \cpu.ff_mem_request.count).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2897 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request [29:0] \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch }, Q = \cpu.ff_inst_request.mem[1]).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2896 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request [29:0] \cpu.riscv.stage1.rg_eEpoch \cpu.riscv.stage1.rg_wEpoch }, Q = \cpu.ff_inst_request.mem[0]).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2895 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314_Y [0], Q = \cpu.ff_inst_request.wptr).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2894 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316_Y [0], Q = \cpu.ff_inst_request.rptr).
Adding EN signal on $flatten\cpu.\ff_inst_request.$procdff$2893 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_request.$0\count[1:0], Q = \cpu.ff_inst_request.count).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2906 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.ff_inst_access_fault.mem[1]).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2905 ($adff) from module mkeclass_axi4 (D = 1'0, Q = \cpu.ff_inst_access_fault.mem[0]).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2904 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:43$1279_Y [0], Q = \cpu.ff_inst_access_fault.wptr).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2903 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:47$1281_Y [0], Q = \cpu.ff_inst_access_fault.rptr).
Adding EN signal on $flatten\cpu.\ff_inst_access_fault.$procdff$2902 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\ff_inst_access_fault.$0\count[1:0], Q = \cpu.ff_inst_access_fault.count).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2924 ($adff) from module mkeclass_axi4 (D = { 2'00 \instr_mem.rdata 5'10000 }, Q = \cpu.fetch_xactor_f_rd_data.mem[1]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2923 ($adff) from module mkeclass_axi4 (D = { 2'00 \instr_mem.rdata 5'10000 }, Q = \cpu.fetch_xactor_f_rd_data.mem[0]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2922 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209_Y [0], Q = \cpu.fetch_xactor_f_rd_data.wptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2921 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211_Y [0], Q = \cpu.fetch_xactor_f_rd_data.rptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_data.$procdff$2920 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_data.$0\count[1:0], Q = \cpu.fetch_xactor_f_rd_data.count).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2933 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request 2'00 \cpu.fetch_xactor_f_rd_addr.D_IN [17] 17'01000000000010000 }, Q = \cpu.fetch_xactor_f_rd_addr.mem[1]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2932 ($adff) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.rg_fabric_request 2'00 \cpu.fetch_xactor_f_rd_addr.D_IN [17] 17'01000000000010000 }, Q = \cpu.fetch_xactor_f_rd_addr.mem[0]).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2931 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174_Y [0], Q = \cpu.fetch_xactor_f_rd_addr.wptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2930 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176_Y [0], Q = \cpu.fetch_xactor_f_rd_addr.rptr).
Adding EN signal on $flatten\cpu.\fetch_xactor_f_rd_addr.$procdff$2929 ($adff) from module mkeclass_axi4 (D = $flatten\cpu.\fetch_xactor_f_rd_addr.$0\count[1:0], Q = \cpu.fetch_xactor_f_rd_addr.count).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3293 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3290 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3280 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3277 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3267 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3264 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 32 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 34 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 36 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3225 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 32 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 34 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 36 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 38 on $auto$ff.cc:266:slice$3222 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3212 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$3209 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3199 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3199 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3199 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3199 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3196 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3196 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3196 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3196 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3186 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$3183 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 24 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 26 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 28 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 30 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 32 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 33 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 34 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 35 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 36 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 37 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 38 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 39 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 40 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 41 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 42 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 43 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 44 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 45 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 46 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 47 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 1-bit at position 48 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 49 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.
Setting constant 0-bit at position 50 on $auto$ff.cc:266:slice$3155 ($dffe) from module mkeclass_axi4.

33.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 105 unused cells and 103 unused wires.
<suppressed ~108 debug messages>

33.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~47 debug messages>

33.12.9. Rerunning OPT passes. (Maybe there is more to do..)

33.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:850$501.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:850$501.
    dead port 1/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:854$503.
    dead port 2/2 on $mux $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:854$503.
Removed 4 multiplexer ports.
<suppressed ~78 debug messages>

33.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    New ctrl vector for $pmux cell $flatten\cpu.\ff_inst_access_fault.$procmux$2149: $auto$opt_reduce.cc:134:opt_pmux$3315
    New ctrl vector for $pmux cell $flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2778: $auto$opt_reduce.cc:134:opt_pmux$3317
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 2 changes.

33.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

33.12.13. Executing OPT_DFF pass (perform DFF optimizations).

33.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

33.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~11 debug messages>

33.12.16. Rerunning OPT passes. (Maybe there is more to do..)

33.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

33.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.12.20. Executing OPT_DFF pass (perform DFF optimizations).

33.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 11 unused cells and 16 unused wires.
<suppressed ~14 debug messages>

33.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.12.23. Rerunning OPT passes. (Maybe there is more to do..)

33.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

33.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.12.27. Executing OPT_DFF pass (perform DFF optimizations).

33.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.12.30. Finished OPT passes. (There is nothing left to do.)

33.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 22 address bits (of 32) from memory init port mkeclass_axi4.$flatten\instr_mem.$meminit$\mem$bram.v:0$189 (instr_mem.mem).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$add$mkeclass_axi4.v:53$172 ($add).
Removed top 8 bits (of 32) from port Y of cell mkeclass_axi4.$add$mkeclass_axi4.v:53$172 ($add).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2693_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2694_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2695_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2696_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2697_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2698_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\uart_bridge.\u_uart_tx.$procmux$2699_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180 ($add).
Removed top 21 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180 ($add).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$auto$opt_dff.cc:195:make_patterns_logic$3091 ($ne).
Removed top 21 bits (of 23) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3313 ($dffe).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:108$814 ($ne).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$820 ($mux).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:123$822 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:116$833 ($ne).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:117$834 ($ne).
Removed top 15 bits (of 32) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:159$846 ($mux).
Removed top 4 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:168$849 ($mux).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:173$850 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:175$853 ($eq).
Removed top 2 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:176$855 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:195$878 ($eq).
Removed top 10 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:229$887 ($eq).
Removed top 2 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:233$893 ($eq).
Removed top 3 bits (of 12) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:238$901 ($eq).
Removed top 2 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:238$908 ($mux).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:229$909 ($mux).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:260$912 ($ne).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:269$916 ($eq).
Removed top 1 bits (of 7) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$eq$module_decoder_func_32.v:273$921 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$lt$module_decoder_func_32.v:297$931 ($lt).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ne$module_decoder_func_32.v:313$935 ($ne).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$940 ($mux).
Removed top 3 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1822_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1830_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1835_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1836_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1864_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1865_CMP0 ($eq).
Removed top 11 bits (of 25) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1886_CMP1 ($eq).
Removed top 1 bits (of 3) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1885 ($mux).
Removed top 2 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1891 ($pmux).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$procmux$1804_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$ne$module_address_valid.v:100$1064 ($ne).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:91$1050 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:78$1043 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:77$1041 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:74$1037 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:73$1036 ($eq).
Removed top 2 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$gt$module_address_valid.v:71$1035 ($gt).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:68$1033 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:67$1031 ($eq).
Removed top 1 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:66$1029 ($eq).
Removed top 3 bits (of 4) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:65$1027 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:52$1016 ($eq).
Removed top 6 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:51$1014 ($eq).
Removed top 7 bits (of 8) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.\instance_address_valid_0.$eq$module_address_valid.v:50$1013 ($eq).
Removed top 2 bits (of 14) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_chk_interrupt_0.$ternary$module_chk_interrupt.v:63$1071 ($mux).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$gt$FIFO2.v:21$1362 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1385 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1385 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1387 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1387 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1974_CMP0 ($eq).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:759$345 ($mux).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:745$340 ($mux).
Removed top 4 bits (of 5) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$317 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$307 ($add).
Removed top 29 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$304 ($add).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$lt$FIFO2.v:20$1361 ($lt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$554 ($add).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$eq$mkalu.v:75$570 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2616_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2617_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.\alu.$procmux$2618_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\riscv.\stage2.$procmux$2642_CMP0 ($eq).
Removed top 1 bits (of 38) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:799$458 ($mux).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$gt$FIFO2.v:21$1082 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1107 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1107 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$procmux$2855_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$gt$FIFO2.v:21$1117 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1140 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1140 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142 ($sub).
Removed top 24 bits (of 41) from mux cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$procmux$2505 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$procmux$2582_CMP0 ($eq).
Removed top 24 bits (of 37) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3311 ($adffe).
Removed top 24 bits (of 37) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3312 ($adffe).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$gt$FIFO2.v:21$1152 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2493_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$gt$FIFO2.v:21$1187 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$procmux$2404_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$gt$FIFO2.v:21$1152 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$procmux$2500_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$gt$FIFO2.v:21$1222 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1245 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1245 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1247 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1247 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$procmux$2315_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$gt$FIFO2.v:21$1292 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1315 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1315 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1317 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1317 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$procmux$2137_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$gt$FIFO2.v:21$1257 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1282 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1282 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$procmux$2226_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$gt$FIFO2.v:21$1187 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2404_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$gt$FIFO2.v:21$1152 ($gt).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176 ($add).
Removed top 31 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176 ($add).
Removed top 31 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 30 bits (of 32) from port Y of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
Removed top 20 bits (of 52) from mux cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2416 ($pmux).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2493_CMP0 ($eq).
Removed top 20 bits (of 35) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3303 ($adffe).
Removed top 20 bits (of 35) from FF cell mkeclass_axi4.$auto$ff.cc:266:slice$3304 ($adffe).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2682_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2678_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$procmux$2674_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1299$253 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1221$232 ($eq).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$ne$mkeclass.v:1198$227 ($ne).
Removed top 1 bits (of 2) from port B of cell mkeclass_axi4.$flatten\cpu.$eq$mkeclass.v:1090$210 ($eq).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$lt$FIFO2.v:20$1081 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$lt$FIFO2.v:20$1116 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$lt$FIFO2.v:20$1151 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$lt$FIFO2.v:20$1186 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$lt$FIFO2.v:20$1151 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_mem_request.$lt$FIFO2.v:20$1221 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_request.$lt$FIFO2.v:20$1291 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$lt$FIFO2.v:20$1256 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$lt$FIFO2.v:20$1186 ($lt).
Removed top 30 bits (of 32) from port B of cell mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$lt$FIFO2.v:20$1151 ($lt).
Removed top 2 bits (of 7) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:154$844 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$882 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$881 ($mux).
Removed top 1 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1888 ($mux).
Removed top 2 bits (of 6) from mux cell mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:133$842 ($mux).
Removed top 8 bits (of 32) from wire mkeclass_axi4.$add$mkeclass_axi4.v:53$172_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142_Y.
Removed top 30 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105_Y.
Removed top 31 bits (of 32) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:105$820_Y.
Removed top 1 bits (of 6) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$881_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:229$909_Y.
Removed top 2 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:238$908_Y.
Removed top 1 bits (of 3) from wire mkeclass_axi4.$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$940_Y.
Removed top 21 bits (of 32) from wire mkeclass_axi4.$flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180_Y.

33.14. Executing PEEPOPT pass (run peephole optimizers).

33.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

33.16. Executing SHARE pass (SAT-based resource sharing).
Found 7 cells in module mkeclass_axi4 that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$sshr$mkalu.v:44$559 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$558 ($shr):
    Found 1 activation_patterns using ctrl signal { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] }.
    Found 2 candidates: $flatten\cpu.$shr$mkeclass.v:1278$245 $flatten\cpu.$shr$mkeclass.v:1274$244
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1278$245 ($shr):
      Found 3 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ }.
      Forbidden control signals for this pair of cells: { \cpu.riscv.stage1.EN_ma_flush \cpu.riscv.stage1.rg_fabric_request_EN_port1__write $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1974_CMP $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1947_CMP \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_5_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_2_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_1_connect_ena_data \cpu.riscv.stage1_tx_stage1_control_enq_ena }
      Activation pattern for cell $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$558: { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 2'10
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ } = 5'11001
      Size of SAT problem: 0 cells, 1093 variables, 2574 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 7'1101110
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1274$244 ($shr):
      Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y }.
      Forbidden control signals for this pair of cells: { \cpu.riscv.stage1.EN_ma_flush \cpu.riscv.stage1.rg_fabric_request_EN_port1__write $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1974_CMP $flatten\cpu.\riscv.\stage1.\ff_memory_response.$procmux$1947_CMP \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_5_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_2_connect_ena_data \cpu.riscv.CAN_FIRE_RL_empty_txe_to_fifof_1_connect_ena_data \cpu.riscv.stage1_tx_stage1_control_enq_ena }
      Activation pattern for cell $flatten\cpu.\riscv.\stage2.\alu.$shr$mkalu.v:43$558: { $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 2'10
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1274$244: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y } = 2'11
      Size of SAT problem: 0 cells, 500 variables, 1164 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y $flatten\cpu.\riscv.\stage2.\alu.$procmux$2614_CMP \cpu.riscv.fifof_2.D_OUT [6] } = 4'1110
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage2.\alu.$shl$mkalu.v:42$557 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage2.\alu.$procmux$2618_CMP.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:50$1357 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$346_Y.
    Found 1 candidates: $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1356
    Analyzing resource sharing with $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1356 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$348_Y.
      Activation pattern for cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:50$1357: $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$346_Y = 1'0
      Activation pattern for cell $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1356: $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$348_Y = 1'0
      Size of SAT problem: 0 cells, 1659 variables, 4154 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:764$346_Y $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$348_Y } = 2'00
  Analyzing resource sharing options for $flatten\cpu.\riscv.\stage1.\integer_rf_rf.$memrd$\reg_file$RegFile.v:49$1356 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\cpu.\riscv.\stage1.$eq$mkstage1.v:768$348_Y.
    No candidates found.
  Analyzing resource sharing options for $flatten\cpu.$shr$mkeclass.v:1278$245 ($shr):
    Found 3 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ }.
    Found 1 candidates: $flatten\cpu.$shr$mkeclass.v:1274$244
    Analyzing resource sharing with $flatten\cpu.$shr$mkeclass.v:1274$244 ($shr):
      Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y }.
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP \cpu.ff_mem_request.DEQ } = 4'1111
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1278$245: { \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ } = 5'11001
      Activation pattern for cell $flatten\cpu.$shr$mkeclass.v:1274$244: { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y } = 2'11
      Size of SAT problem: 0 cells, 1555 variables, 3660 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \cpu.WILL_FIRE_RL_handle_fetch_response \cpu.WILL_FIRE_RL_handle_memoryRead_response $flatten\cpu.$eq$mkeclass.v:1284$246_Y $flatten\cpu.$eq$mkeclass.v:1292$250_Y $flatten\cpu.$procmux$2674_CMP $flatten\cpu.$procmux$2675_CMP \cpu.ff_mem_request.DEQ } = 7'1111011
  Analyzing resource sharing options for $flatten\cpu.$shr$mkeclass.v:1274$244 ($shr):
    Found 1 activation_patterns using ctrl signal { \cpu.WILL_FIRE_RL_handle_fetch_response $flatten\cpu.$eq$mkeclass.v:1292$250_Y }.
    No candidates found.

33.17. Executing TECHMAP pass (map to technology primitives).

33.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

33.17.2. Continuing TECHMAP pass.
Using template $paramod$70ab994d9d7a6411c02d086fdaeb40976ec13d82\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$b572544677d963e14c0b065ea224e532734f7bc9\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$f1f291c0f5677c92e44b45479f4634f84921299f\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$95cc903f66ace9a14a4cfd768767dedcebc73225\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~228 debug messages>

33.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~1 debug messages>

33.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 72 unused wires.
<suppressed ~1 debug messages>

33.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mkeclass_axi4:
  creating $macc model for $add$mkeclass_axi4.v:53$172 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
  creating $macc model for $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
  creating $macc model for $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1282 ($sub).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1315 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316 ($add).
  creating $macc model for $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1317 ($sub).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1245 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246 ($add).
  creating $macc model for $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1247 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1177 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1210 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1212 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1175 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1177 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1140 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142 ($sub).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105 ($add).
  creating $macc model for $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1107 ($sub).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$304 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$307 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$317 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1385 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1387 ($sub).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$554 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$556 ($add).
  creating $macc model for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$567 ($add).
  creating $macc model for $flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180 ($add).
  creating $alu model for $macc $flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$567.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$556.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$554.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1387.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1385.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$317.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$307.
  creating $alu model for $macc $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$304.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1107.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1140.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1177.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1175.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1212.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1210.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1177.
  creating $alu model for $macc $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1247.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1245.
  creating $alu model for $macc $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1317.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1315.
  creating $alu model for $macc $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314.
  creating $alu model for $macc $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1282.
  creating $alu model for $macc $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1212.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1210.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1177.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1175.
  creating $alu model for $macc $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174.
  creating $alu model for $macc $add$mkeclass_axi4.v:53$172.
  creating $alu model for $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$811 ($ge): new $alu
  creating $alu model for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:45$560 ($lt): new $alu
  creating $alu model for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:46$561 ($lt): new $alu
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:46$561: $auto$alumacc.cc:485:replace_alu$3370
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$lt$mkalu.v:45$560: $auto$alumacc.cc:485:replace_alu$3375
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ge$module_decoder_func_32.v:106$811: $auto$alumacc.cc:485:replace_alu$3382
  creating $alu cell for $add$mkeclass_axi4.v:53$172: $auto$alumacc.cc:485:replace_alu$3391
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:43$1174: $auto$alumacc.cc:485:replace_alu$3394
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:44$1175: $auto$alumacc.cc:485:replace_alu$3397
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$add$FIFO2.v:47$1176: $auto$alumacc.cc:485:replace_alu$3400
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_addr.$sub$FIFO2.v:48$1177: $auto$alumacc.cc:485:replace_alu$3403
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:43$1209: $auto$alumacc.cc:485:replace_alu$3406
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:44$1210: $auto$alumacc.cc:485:replace_alu$3409
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$add$FIFO2.v:47$1211: $auto$alumacc.cc:485:replace_alu$3412
  creating $alu cell for $flatten\cpu.\fetch_xactor_f_rd_data.$sub$FIFO2.v:48$1212: $auto$alumacc.cc:485:replace_alu$3415
  creating $alu cell for $flatten\cpu.\ff_inst_access_fault.$add$FIFO2.v:44$1280: $auto$alumacc.cc:485:replace_alu$3418
  creating $alu cell for $flatten\cpu.\ff_inst_access_fault.$sub$FIFO2.v:48$1282: $auto$alumacc.cc:485:replace_alu$3421
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:43$1314: $auto$alumacc.cc:485:replace_alu$3424
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:44$1315: $auto$alumacc.cc:485:replace_alu$3427
  creating $alu cell for $flatten\cpu.\ff_inst_request.$add$FIFO2.v:47$1316: $auto$alumacc.cc:485:replace_alu$3430
  creating $alu cell for $flatten\cpu.\ff_inst_request.$sub$FIFO2.v:48$1317: $auto$alumacc.cc:485:replace_alu$3433
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:43$1244: $auto$alumacc.cc:485:replace_alu$3436
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:44$1245: $auto$alumacc.cc:485:replace_alu$3439
  creating $alu cell for $flatten\cpu.\ff_mem_request.$add$FIFO2.v:47$1246: $auto$alumacc.cc:485:replace_alu$3442
  creating $alu cell for $flatten\cpu.\ff_mem_request.$sub$FIFO2.v:48$1247: $auto$alumacc.cc:485:replace_alu$3445
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_addr.$add$FIFO2.v:44$1175: $auto$alumacc.cc:485:replace_alu$3448
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_addr.$sub$FIFO2.v:48$1177: $auto$alumacc.cc:485:replace_alu$3451
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:43$1209: $auto$alumacc.cc:485:replace_alu$3454
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:44$1210: $auto$alumacc.cc:485:replace_alu$3457
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$add$FIFO2.v:47$1211: $auto$alumacc.cc:485:replace_alu$3460
  creating $alu cell for $flatten\cpu.\memory_xactor_f_rd_data.$sub$FIFO2.v:48$1212: $auto$alumacc.cc:485:replace_alu$3463
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:43$1174: $auto$alumacc.cc:485:replace_alu$3466
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:44$1175: $auto$alumacc.cc:485:replace_alu$3469
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$add$FIFO2.v:47$1176: $auto$alumacc.cc:485:replace_alu$3472
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_addr.$sub$FIFO2.v:48$1177: $auto$alumacc.cc:485:replace_alu$3475
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:43$1139: $auto$alumacc.cc:485:replace_alu$3478
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:44$1140: $auto$alumacc.cc:485:replace_alu$3481
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$add$FIFO2.v:47$1141: $auto$alumacc.cc:485:replace_alu$3484
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_data.$sub$FIFO2.v:48$1142: $auto$alumacc.cc:485:replace_alu$3487
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_resp.$add$FIFO2.v:44$1105: $auto$alumacc.cc:485:replace_alu$3490
  creating $alu cell for $flatten\cpu.\memory_xactor_f_wr_resp.$sub$FIFO2.v:48$1107: $auto$alumacc.cc:485:replace_alu$3493
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:635$304: $auto$alumacc.cc:485:replace_alu$3496
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:641$307: $auto$alumacc.cc:485:replace_alu$3499
  creating $alu cell for $flatten\cpu.\riscv.\stage1.$add$mkstage1.v:672$317: $auto$alumacc.cc:485:replace_alu$3502
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:43$1384: $auto$alumacc.cc:485:replace_alu$3505
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:44$1385: $auto$alumacc.cc:485:replace_alu$3508
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$add$FIFO2.v:47$1386: $auto$alumacc.cc:485:replace_alu$3511
  creating $alu cell for $flatten\cpu.\riscv.\stage1.\ff_memory_response.$sub$FIFO2.v:48$1387: $auto$alumacc.cc:485:replace_alu$3514
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$554: $auto$alumacc.cc:485:replace_alu$3517
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:41$556: $auto$alumacc.cc:485:replace_alu$3520
  creating $alu cell for $flatten\cpu.\riscv.\stage2.\alu.$add$mkalu.v:65$567: $auto$alumacc.cc:485:replace_alu$3523
  creating $alu cell for $flatten\uart_bridge.$add$axi4_uart_bridge.v:28$180: $auto$alumacc.cc:485:replace_alu$3526
  created 49 $alu and 0 $macc cells.

33.21. Executing OPT pass (performing simple optimizations).

33.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

33.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.21.6. Executing OPT_DFF pass (perform DFF optimizations).

33.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

33.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.21.9. Rerunning OPT passes. (Maybe there is more to do..)

33.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~76 debug messages>

33.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.21.13. Executing OPT_DFF pass (perform DFF optimizations).

33.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.21.16. Finished OPT passes. (There is nothing left to do.)

33.22. Executing MEMORY pass.

33.22.1. Executing OPT_MEM pass (optimize memories).
mkeclass_axi4.instr_mem.mem: removing const-1 lane 24
mkeclass_axi4.instr_mem.mem: removing const-1 lane 25
Performed a total of 1 transformations.

33.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

33.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file write port 0.

33.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

33.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\cpu.riscv.stage1.integer_rf_rf.reg_file'[0] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\cpu.riscv.stage1.integer_rf_rf.reg_file'[1] in module `\mkeclass_axi4': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\instr_mem.mem'[0] in module `\mkeclass_axi4': merging output FF to cell.
Checking read port address `\cpu.riscv.stage1.integer_rf_rf.reg_file'[0] in module `\mkeclass_axi4': no address FF found.
Checking read port address `\cpu.riscv.stage1.integer_rf_rf.reg_file'[1] in module `\mkeclass_axi4': no address FF found.

33.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file by address:

33.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

33.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory mkeclass_axi4.cpu.riscv.stage1.integer_rf_rf.reg_file
found attribute 'ram_style = block' on memory mkeclass_axi4.instr_mem.mem, forced mapping to block RAM
mapping memory mkeclass_axi4.instr_mem.mem via $__ICE40_RAM4K_
<suppressed ~67 debug messages>

33.25. Executing TECHMAP pass (map to technology primitives).

33.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

33.25.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

33.25.3. Continuing TECHMAP pass.
Using template $paramod$f1caacff3afe9ecdf882737d3ee2de33696e28c6\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$758c779f195110baf8c3821527f72935aa90eee1\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$58376703a0f12892e663e4034e62d55af4306005\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$1e3f74d3f930c51fa3f1daa7d77f34f0a7eb4f28\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$af7295e1573531c5e3ed2b39f1bcf1c84f7419b0\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$532cd58d709e20985d60914b342f55dba6a7ce1c\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$3141c3fed4b64a956d6beaeb3141fd7c4c35730b\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$2ed24051814d6793a75eea240585c7b0cae34b77\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~180 debug messages>

33.26. Executing ICE40_BRAMINIT pass.

33.27. Executing OPT pass (performing simple optimizations).

33.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~343 debug messages>

33.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$3138 ($adffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_fabric_request_D_IN [1:0], Q = \cpu.riscv.stage1.rg_fabric_request [1:0]).
Adding EN signal on $auto$ff.cc:266:slice$3135 ($adffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.rg_pc_D_IN [1:0], Q = \cpu.riscv.stage1.rg_pc [1:0]).
Removing always-active EN on $auto$ff.cc:266:slice$3107 ($sdffe) from module mkeclass_axi4.
Adding SRST signal on $auto$ff.cc:266:slice$3094 ($dffe) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$procmux$2718_Y, Q = \uart_bridge.u_uart_tx.tx, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$3087 ($dffe) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$procmux$2700_Y, Q = \uart_bridge.u_uart_tx.state, rval = 4'0001).
Setting constant 1-bit at position 0 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 1 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 2 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 3 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 4 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 5 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 6 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 7 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 8 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 9 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 10 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 11 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 12 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 13 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 14 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 15 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 16 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 17 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 18 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 19 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 20 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 21 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 22 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 23 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 24 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 25 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 26 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 27 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 28 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 29 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 30 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.
Setting constant 1-bit at position 31 on $flatten\instr_mem.$procdff$2966 ($dff) from module mkeclass_axi4.

33.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 26 unused cells and 212 unused wires.
<suppressed ~36 debug messages>

33.27.5. Rerunning OPT passes. (Removed registers in this run.)

33.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~11 debug messages>

33.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\cpu.$procdff$2965 ($adff) from module mkeclass_axi4 (removing D path).
Adding SRST signal on $auto$ff.cc:266:slice$3172 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_funct__h342 [4:0], Q = \cpu.riscv.fifof_2.D_OUT [4:0], rval = 5'00001).
Setting constant 0-bit at position 0 on $flatten\cpu.$procdff$2965 ($dlatch) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3303 ($adffe) from module mkeclass_axi4.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$3304 ($adffe) from module mkeclass_axi4.

33.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

33.27.10. Rerunning OPT passes. (Removed registers in this run.)

33.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~6 debug messages>

33.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.27.13. Executing OPT_DFF pass (perform DFF optimizations).

33.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.27.15. Finished fast OPT passes.

33.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \cpu.riscv.stage1.integer_rf_rf.reg_file in module \mkeclass_axi4:
  created 32 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

33.29. Executing OPT pass (performing simple optimizations).

33.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

33.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~95 debug messages>

33.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2677:
      Old ports: A=4'1111, B=8'00010011, Y=\cpu.write_strobe__h2618
      New ports: A=2'11, B=4'0001, Y=\cpu.write_strobe__h2618 [2:1]
      New connections: { \cpu.write_strobe__h2618 [3] \cpu.write_strobe__h2618 [0] } = { \cpu.write_strobe__h2618 [2] 1'1 }
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2681:
      Old ports: A=\cpu.riscv.stage2.ff_memory_request.D_OUT [37:6], B={ \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] }, Y=\cpu.w_wdata__h3100
      New ports: A=\cpu.riscv.stage2.ff_memory_request.D_OUT [37:14], B={ \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:6] \cpu.riscv.stage2.ff_memory_request.D_OUT [21:14] }, Y=\cpu.w_wdata__h3100 [31:8]
      New connections: \cpu.w_wdata__h3100 [7:0] = \cpu.riscv.stage2.ff_memory_request.D_OUT [13:6]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1251$240:
      Old ports: A={ 2'00 \cpu.ff_inst_request.D_OUT 1'1 }, B={ \cpu.put_inst__h2189 \cpu.ff_inst_request.D_OUT [1:0] \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y=\cpu.riscv.stage1.ff_memory_response.D_IN
      New ports: A={ 2'00 \cpu.ff_inst_request.D_OUT [31:2] 1'1 }, B={ \cpu.put_inst__h2189 \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y={ \cpu.riscv.stage1.ff_memory_response.D_IN [34:3] \cpu.riscv.stage1.ff_memory_response.D_IN [0] }
      New connections: \cpu.riscv.stage1.ff_memory_response.D_IN [2:1] = \cpu.ff_inst_request.D_OUT [1:0]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1255$241:
      Old ports: A={ 33'000000000000000000000000000000000 \cpu.ff_mem_request.D_OUT [0] }, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_memory_response_put_1__VAL_1 [1] \cpu.ff_mem_request.D_OUT [0] }, Y=\cpu.riscv.memory_response_put
      New ports: A=33'000000000000000000000000000000000, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_memory_response_put_1__VAL_1 [1] }, Y=\cpu.riscv.memory_response_put [33:1]
      New connections: \cpu.riscv.memory_response_put [0] = \cpu.ff_mem_request.D_OUT [0]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1330$259:
      Old ports: A={ \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, B={ 24'000000000000000000000000 \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, Y=$flatten\cpu.$ternary$mkeclass.v:1330$259_Y
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7], B=1'0, Y=$flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8]
      New connections: { $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [31:9] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [7:0] } = { $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1337$260:
      Old ports: A={ \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }, B={ 16'0000000000000000 \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }, Y=$flatten\cpu.$ternary$mkeclass.v:1337$260_Y
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15], B=1'0, Y=$flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16]
      New connections: { $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [31:17] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [15:0] } = { $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\fetch_xactor_f_rd_addr.$procmux$2416:
      Old ports: A={ \cpu.fetch_xactor_f_rd_addr.mem[0] [31:20] 4'0000 \cpu.fetch_xactor_f_rd_addr.mem[0] [15] 10'0000000000 \cpu.fetch_xactor_f_rd_addr.mem[0] [4] 4'0000 }, B={ \cpu.fetch_xactor_f_rd_addr.mem[1] [31:20] 4'0000 \cpu.fetch_xactor_f_rd_addr.mem[1] [15] 10'0000000000 \cpu.fetch_xactor_f_rd_addr.mem[1] [4] 4'0000 }, Y=\cpu.fetch_xactor_f_rd_addr.D_OUT [31:0]
      New ports: A={ \cpu.fetch_xactor_f_rd_addr.mem[0] [31:20] \cpu.fetch_xactor_f_rd_addr.mem[0] [15] \cpu.fetch_xactor_f_rd_addr.mem[0] [4] }, B={ \cpu.fetch_xactor_f_rd_addr.mem[1] [31:20] \cpu.fetch_xactor_f_rd_addr.mem[1] [15] \cpu.fetch_xactor_f_rd_addr.mem[1] [4] }, Y={ \cpu.fetch_xactor_f_rd_addr.D_OUT [31:20] \cpu.fetch_xactor_f_rd_addr.D_OUT [15] \cpu.fetch_xactor_f_rd_addr.D_OUT [4] }
      New connections: { \cpu.fetch_xactor_f_rd_addr.D_OUT [19:16] \cpu.fetch_xactor_f_rd_addr.D_OUT [14:5] \cpu.fetch_xactor_f_rd_addr.D_OUT [3:0] } = 18'000000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\fetch_xactor_f_rd_data.$procmux$2327:
      Old ports: A={ 2'00 \cpu.fetch_xactor_f_rd_data.mem[0] [36:4] 4'0000 }, B={ 2'00 \cpu.fetch_xactor_f_rd_data.mem[1] [36:4] 4'0000 }, Y={ \cpu.fetch_xactor_f_rd_data_D_OUT [38:5] \cpu.fetch_xactor_f_rd_data.D_OUT [4:0] }
      New ports: A=\cpu.fetch_xactor_f_rd_data.mem[0] [36:4], B=\cpu.fetch_xactor_f_rd_data.mem[1] [36:4], Y={ \cpu.fetch_xactor_f_rd_data_D_OUT [36:5] \cpu.fetch_xactor_f_rd_data.D_OUT [4] }
      New connections: { \cpu.fetch_xactor_f_rd_data_D_OUT [38:37] \cpu.fetch_xactor_f_rd_data.D_OUT [3:0] } = 6'000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_rd_data.$procmux$2327:
      Old ports: A={ 34'0000000000000000000000000000000000 \cpu.memory_xactor_f_rd_data.mem[0] [4] 4'0000 }, B={ 34'0000000000000000000000000000000000 \cpu.memory_xactor_f_rd_data.mem[1] [4] 4'0000 }, Y={ \cpu.memory_xactor_f_rd_data_D_OUT [38:5] \cpu.memory_xactor_f_rd_data.D_OUT [4:0] }
      New ports: A=\cpu.memory_xactor_f_rd_data.mem[0] [4], B=\cpu.memory_xactor_f_rd_data.mem[1] [4], Y=\cpu.memory_xactor_f_rd_data.D_OUT [4]
      New connections: { \cpu.memory_xactor_f_rd_data_D_OUT [38:5] \cpu.memory_xactor_f_rd_data.D_OUT [3:0] } = 38'00000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_wr_addr.$procmux$2416:
      Old ports: A={ \cpu.memory_xactor_f_wr_addr.mem[0] [51:20] 2'00 \cpu.memory_xactor_f_wr_addr.mem[0] [17] 9'000000000 \cpu.memory_xactor_f_wr_addr.mem[0] [7:6] 1'0 \cpu.memory_xactor_f_wr_addr.mem[0] [4] 4'0000 }, B={ \cpu.memory_xactor_f_wr_addr.mem[1] [51:20] 2'00 \cpu.memory_xactor_f_wr_addr.mem[1] [17] 9'000000000 \cpu.memory_xactor_f_wr_addr.mem[1] [7:6] 1'0 \cpu.memory_xactor_f_wr_addr.mem[1] [4] 4'0000 }, Y=\cpu.memory_xactor_f_wr_addr.D_OUT
      New ports: A={ \cpu.memory_xactor_f_wr_addr.mem[0] [51:20] \cpu.memory_xactor_f_wr_addr.mem[0] [17] \cpu.memory_xactor_f_wr_addr.mem[0] [7:6] \cpu.memory_xactor_f_wr_addr.mem[0] [4] }, B={ \cpu.memory_xactor_f_wr_addr.mem[1] [51:20] \cpu.memory_xactor_f_wr_addr.mem[1] [17] \cpu.memory_xactor_f_wr_addr.mem[1] [7:6] \cpu.memory_xactor_f_wr_addr.mem[1] [4] }, Y={ \cpu.memory_xactor_f_wr_addr.D_OUT [51:20] \cpu.memory_xactor_f_wr_addr.D_OUT [17] \cpu.memory_xactor_f_wr_addr.D_OUT [7:6] \cpu.memory_xactor_f_wr_addr.D_OUT [4] }
      New connections: { \cpu.memory_xactor_f_wr_addr.D_OUT [19:18] \cpu.memory_xactor_f_wr_addr.D_OUT [16:8] \cpu.memory_xactor_f_wr_addr.D_OUT [5] \cpu.memory_xactor_f_wr_addr.D_OUT [3:0] } = 16'0000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.\memory_xactor_f_wr_data.$procmux$2505:
      Old ports: A={ \cpu.memory_xactor_f_wr_data.mem[0] [16:5] 4'0000 \cpu.memory_xactor_f_wr_data.mem[0] [0] }, B={ \cpu.memory_xactor_f_wr_data.mem[1] [16:5] 4'0000 \cpu.memory_xactor_f_wr_data.mem[1] [0] }, Y=\cpu.memory_xactor_f_wr_data.D_OUT [16:0]
      New ports: A={ \cpu.memory_xactor_f_wr_data.mem[0] [16:5] \cpu.memory_xactor_f_wr_data.mem[0] [0] }, B={ \cpu.memory_xactor_f_wr_data.mem[1] [16:5] \cpu.memory_xactor_f_wr_data.mem[1] [0] }, Y={ \cpu.memory_xactor_f_wr_data.D_OUT [16:5] \cpu.memory_xactor_f_wr_data.D_OUT [0] }
      New connections: \cpu.memory_xactor_f_wr_data.D_OUT [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:649$312:
      Old ports: A={ \cpu.riscv.stage1.ma_flush_newpc [31:2] 2'00 }, B=4096, Y=\cpu.riscv.stage1.rg_fabric_request_port1__write_1
      New ports: A=\cpu.riscv.stage1.ma_flush_newpc [31:2], B=30'000000000000000000010000000000, Y=\cpu.riscv.stage1.rg_fabric_request_port1__write_1 [31:2]
      New connections: \cpu.riscv.stage1.rg_fabric_request_port1__write_1 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1882:
      Old ports: A=3'110, B=3'001, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2
      New ports: A=2'10, B=2'01, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1888:
      Old ports: A=5'00010, B={ 1'0 \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0] }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4:0]
      New ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1891:
      Old ports: A=4'0010, B=8'10xx0011, Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3:0]
      New ports: A=3'010, B=6'1xx011, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:103$821:
      Old ports: A={ 1'1 $auto$wreduce.cc:461:run$3332 [1:0] }, B=3'110, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136
      New ports: A=$auto$wreduce.cc:461:run$3332 [1:0], B=2'10, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_14_TO_12_9_EQ_0_7_ETC___d136 [2] = 1'1
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:131$840:
      Old ports: A=4'0101, B=4'1011, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211
      New ports: A=2'10, B=2'01, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [2:1]
      New connections: { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [3] \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [0] } = { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BIT_30_10_THEN_0b1011__ETC___d211 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:159$846:
      Old ports: A={ \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0] \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }, B={ \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [19:15] \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:0]
      New ports: A=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_de_ETC__q10 [4:0], B=\cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [19:15], Y=\cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [16:12]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.instr_meta_immediate__h341 [11:0] = { \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [11] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q7 \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_6_TO_2_0b101_0__ETC__q8 \cpu.riscv.stage1.instance_decoder_func_32_1.immediate_value___1__h1461 [0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915:
      Old ports: A=3'110, B=3'001, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y
      New ports: A=2'10, B=2'01, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y [1:0]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y [2] = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924:
      Old ports: A=3'110, B=3'000, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y [2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932:
      Old ports: A=3'110, B=3'001, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y
      New ports: A=2'10, B=2'01, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y [1:0]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y [2] = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933:
      Old ports: A=3'110, B=3'000, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y [2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$938:
      Old ports: A=3'110, B=3'010, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$938_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$938_Y [2]
      New connections: $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:313$938_Y [1:0] = 2'10
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:319$940:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:461:run$3336 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$3336 [1]
      New connections: $auto$wreduce.cc:461:run$3336 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948:
      Old ports: A=4'0000, B=4'1010, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948_Y
      New ports: A=1'0, B=1'1, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948_Y [1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948_Y [3:2] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:404$948_Y [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950:
      Old ports: A={ 3'001 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [12] }, B={ 2'11 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13:12] }, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950_Y
      New ports: A=2'01, B={ 1'1 \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [13] }, Y=$flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950_Y [2:1]
      New connections: { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950_Y [3] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950_Y [0] } = { $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:425$950_Y [2] \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [12] }
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage3.$ternary$mkstage3.v:710$423:
      Old ports: A=33'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1, B={ \cpu.riscv.fifof_3.D_OUT [37:6] 1'1 }, Y=\cpu.riscv.stage3.wr_flush_wget
      New ports: A=32'x, B=\cpu.riscv.fifof_3.D_OUT [37:6], Y=\cpu.riscv.stage3.wr_flush_wget [32:1]
      New connections: \cpu.riscv.stage3.wr_flush_wget [0] = 1'1
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2673:
      Old ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164, B={ $flatten\cpu.$ternary$mkeclass.v:1330$259_Y $flatten\cpu.$ternary$mkeclass.v:1337$260_Y }, Y=\cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3
      New ports: A=\cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [31:8], B={ $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1330$259_Y [8] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] $flatten\cpu.$ternary$mkeclass.v:1337$260_Y [16] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [15:8] }, Y=\cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [31:8]
      New connections: \cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [7:0] = \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.$ternary$mkstage1.v:653$313:
      Old ports: A={ \cpu.riscv.stage1.rg_fabric_request_port0__write_1 [31:2] 2'x }, B=\cpu.riscv.stage1.rg_fabric_request_port1__write_1, Y=\cpu.riscv.stage1.rg_fabric_request_D_IN
      New ports: A={ \cpu.riscv.stage1.rg_fabric_request_port0__write_1 [31:2] 1'x }, B={ \cpu.riscv.stage1.rg_fabric_request_port1__write_1 [31:2] 1'0 }, Y={ \cpu.riscv.stage1.rg_fabric_request_D_IN [31:2] \cpu.riscv.stage1.rg_fabric_request_D_IN [0] }
      New connections: \cpu.riscv.stage1.rg_fabric_request_D_IN [1] = \cpu.riscv.stage1.rg_fabric_request_D_IN [0]
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1868:
      Old ports: A=3'110, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5
      New ports: A=2'10, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:297$932_Y [1:0] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:300$933_Y [1] 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_d_ETC__q5 [1]
    Consolidated identical input bits for $pmux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1876:
      Old ports: A=3'110, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3
      New ports: A=2'10, B={ $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:260$915_Y [1:0] \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_14_TO_12_0_1_1_1_6__q2 [1:0] $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:269$924_Y [1] 3'000 }, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [2] = \cpu.riscv.stage1.instance_decoder_func_32_1.CASE_decoder_func_32_inst_BITS_4_TO_2_0b0_IF_N_ETC__q3 [1]
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:133$842:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h948 [1:0] }, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$881:
      Old ports: A=5'00010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [4:0], Y=$auto$wreduce.cc:461:run$3333 [4:0]
      New ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0], Y=$auto$wreduce.cc:461:run$3333 [3:0]
      New connections: $auto$wreduce.cc:461:run$3333 [4] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1888:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3:0], Y=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h921 [1:0] }, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$882:
      Old ports: A=$auto$wreduce.cc:461:run$3333 [4:0], B=5'00010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [4:0]
      New ports: A=$auto$wreduce.cc:461:run$3333 [3:0], B=4'0010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3:0]
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [4] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:197$881:
      Old ports: A=4'0010, B=\cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3:0], Y=$auto$wreduce.cc:461:run$3333 [3:0]
      New ports: A=3'010, B={ \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [3] \cpu.riscv.stage1.instance_decoder_func_32_1._theResult_____5_snd__h893 [1:0] }, Y={ $auto$wreduce.cc:461:run$3333 [3] $auto$wreduce.cc:461:run$3333 [1:0] }
      New connections: $auto$wreduce.cc:461:run$3333 [2] = 1'0
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$ternary$module_decoder_func_32.v:191$882:
      Old ports: A=$auto$wreduce.cc:461:run$3333 [3:0], B=4'0010, Y=\cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3:0]
      New ports: A={ $auto$wreduce.cc:461:run$3333 [3] $auto$wreduce.cc:461:run$3333 [1:0] }, B=3'010, Y={ \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [3] \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [1:0] }
      New connections: \cpu.riscv.stage1.instance_decoder_func_32_1.x__h4156 [2] = 1'0
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 37 changes.

33.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

33.29.6. Executing OPT_DFF pass (perform DFF optimizations).

33.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 13 unused cells and 116 unused wires.
<suppressed ~16 debug messages>

33.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~10 debug messages>

33.29.9. Rerunning OPT passes. (Maybe there is more to do..)

33.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~97 debug messages>

33.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$mkeclass.v:1255$241:
      Old ports: A=33'000000000000000000000000000000000, B={ \cpu.put_data__h4677 \cpu.MUX_riscv_inst_response_put_1__VAL_1 [0] }, Y=\cpu.riscv.memory_response_put [33:1]
      New ports: A=0, B={ \cpu.CASE_ff_mem_requestD_OUT_BITS_2_TO_1_0_IF_ff__ETC__q3 [31:8] \cpu.memory_xactor_f_rd_data_first__55_BITS_36_TO_5_ETC___d164 [7:0] }, Y=\cpu.riscv.memory_response_put [33:2]
      New connections: \cpu.riscv.memory_response_put [1] = 1'0
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 1 changes.

33.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[9]$3784 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[9]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[8]$3782 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[8]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[7]$3780 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[7]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[6]$3778 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[6]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[5]$3776 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[5]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[4]$3774 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[4]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[3]$3772 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[3]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[31]$3828 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[31]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[30]$3826 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[30]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[2]$3770 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[2]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[29]$3824 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[29]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[28]$3822 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[28]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[27]$3820 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[27]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[26]$3818 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[26]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[25]$3816 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[25]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[24]$3814 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[24]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[23]$3812 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[23]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[22]$3810 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[22]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[21]$3808 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[21]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[20]$3806 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[20]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[1]$3768 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[1]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[19]$3804 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[19]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[18]$3802 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[18]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[17]$3800 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[17]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[16]$3798 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[16]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[15]$3796 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[15]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[14]$3794 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[14]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[13]$3792 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[13]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[12]$3790 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[12]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[11]$3788 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[11]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[10]$3786 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[10]).
Adding EN signal on $memory\cpu.riscv.stage1.integer_rf_rf.reg_file[0]$3766 ($dff) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf.D_IN, Q = \cpu.riscv.stage1.integer_rf_rf.reg_file[0]).
Adding SRST signal on $auto$ff.cc:266:slice$3763 ($dffe) from module mkeclass_axi4 (D = \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [30:25], Q = \cpu.riscv.fifof_2.D_OUT [17:12], rval = 6'000000).
Adding SRST signal on $auto$ff.cc:266:slice$3762 ($sdffce) from module mkeclass_axi4 (D = { \cpu.riscv.stage1.instance_decoder_func_32_1.IF_decoder_func_32_inst_BITS_6_TO_2_EQ_0b11000_ETC___d221 [1] \cpu.riscv.stage1.instance_decoder_func_32_1.decoder_func_32_inst [14] }, Q = { \cpu.riscv.fifof_2.D_OUT [4] \cpu.riscv.fifof_2.D_OUT [2] }, rval = 2'00).

33.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 33 unused cells and 33 unused wires.
<suppressed ~34 debug messages>

33.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2 debug messages>

33.29.16. Rerunning OPT passes. (Maybe there is more to do..)

33.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

33.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

33.29.20. Executing OPT_DFF pass (perform DFF optimizations).

33.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

33.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.29.23. Rerunning OPT passes. (Maybe there is more to do..)

33.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mkeclass_axi4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

33.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mkeclass_axi4.
Performed a total of 0 changes.

33.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.29.27. Executing OPT_DFF pass (perform DFF optimizations).

33.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.29.30. Finished OPT passes. (There is nothing left to do.)

33.30. Executing ICE40_WRAPCARRY pass (wrap carries).

33.31. Executing TECHMAP pass (map to technology primitives).

33.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

33.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

33.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$b6ec48645094baeb70d6b93add0cdbbe7498ad3c\_90_pmux for cells of type $pmux.
Using template $paramod$aa21a8cfcdb2d038c61c16c25c37cdf209d597be\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$068ad458e7761d78e5eed8238508872e7b0aef95\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$e765c459d3029c22a22a27989e94858fd9ebfa9c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_80_ice40_alu for cells of type $alu.
Using template $paramod$49f1dc3dcd6d2c748486fe94c6744a34a19bbafe\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'0
  Constant input on bit 1 of port A: 1'0
  Constant input on bit 2 of port A: 1'0
  Constant input on bit 3 of port A: 1'0
  Constant input on bit 4 of port A: 1'0
  Constant input on bit 5 of port A: 1'0
  Constant input on bit 6 of port A: 1'0
  Constant input on bit 7 of port A: 1'0
  Constant input on bit 8 of port A: 1'0
  Constant input on bit 9 of port A: 1'0
  Constant input on bit 10 of port A: 1'0
  Constant input on bit 11 of port A: 1'0
  Constant input on bit 12 of port A: 1'0
  Constant input on bit 13 of port A: 1'0
  Constant input on bit 14 of port A: 1'0
  Constant input on bit 15 of port A: 1'0
  Constant input on bit 16 of port A: 1'0
  Constant input on bit 17 of port A: 1'0
  Constant input on bit 18 of port A: 1'0
  Constant input on bit 19 of port A: 1'0
  Constant input on bit 20 of port A: 1'0
  Constant input on bit 21 of port A: 1'0
  Constant input on bit 22 of port A: 1'0
  Constant input on bit 23 of port A: 1'0
  Constant input on bit 24 of port A: 1'0
  Constant input on bit 25 of port A: 1'0
  Constant input on bit 26 of port A: 1'0
  Constant input on bit 27 of port A: 1'0
  Constant input on bit 28 of port A: 1'0
  Constant input on bit 29 of port A: 1'0
  Constant input on bit 30 of port A: 1'0
  Constant input on bit 31 of port A: 1'0
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
Creating constmapped module `$paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr'.

33.31.72. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~2562 debug messages>

33.31.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~480 debug messages>
Removed 0 unused cells and 19 unused wires.
Using template $paramod$constmap:c3f2a8d81234ad99633484efbae51e950ce0279e$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:6e3026a439ed4a6e7983ca0e910890cc59b2f7b2$paramod$7b0bb309dce042ecaf2e0bfa495da988fc49fdf1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port B: 1'0
  Constant input on bit 1 of port B: 1'0
  Constant input on bit 2 of port B: 1'0
Creating constmapped module `$paramod$constmap:02ee4fad4c1ffc2bbdc3e6fbc37bedbf9185352a$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr'.

33.31.79. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:02ee4fad4c1ffc2bbdc3e6fbc37bedbf9185352a$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~138 debug messages>

33.31.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:02ee4fad4c1ffc2bbdc3e6fbc37bedbf9185352a$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~416 debug messages>
Removed 0 unused cells and 18 unused wires.
Using template $paramod$constmap:02ee4fad4c1ffc2bbdc3e6fbc37bedbf9185352a$paramod$feecc7a0dbd012970970f2858f15e786e251f677\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~959 debug messages>

33.32. Executing OPT pass (performing simple optimizations).

33.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2173 debug messages>

33.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~11643 debug messages>
Removed a total of 3881 cells.

33.32.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11907 ($_DFF_PP0_) from module mkeclass_axi4.

33.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 653 unused cells and 2625 unused wires.
<suppressed ~659 debug messages>

33.32.5. Rerunning OPT passes. (Removed registers in this run.)

33.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~18 debug messages>

33.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.32.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$6775 ($_SDFFCE_PP0P_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1828.Y_B [3], Q = \cpu.riscv.fifof_2.D_OUT [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6675 ($_DFFE_PP_) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf_D_OUT_2 [30], Q = \cpu.riscv.fifof.D_OUT [62], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$6643 ($_DFFE_PP_) from module mkeclass_axi4 (D = \cpu.riscv.stage1.integer_rf_rf_D_OUT_1 [30], Q = \cpu.riscv.fifof.D_OUT [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4853 ($_SDFFCE_PN0P_) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$procmux$2691.Y_B [3], Q = \uart_bridge.u_uart_tx.state [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4852 ($_SDFFCE_PN0P_) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$procmux$2691.Y_B [2], Q = \uart_bridge.u_uart_tx.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4851 ($_SDFFCE_PN0P_) from module mkeclass_axi4 (D = $flatten\uart_bridge.\u_uart_tx.$procmux$2691.Y_B [1], Q = \uart_bridge.u_uart_tx.state [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13810 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1824.B_AND_S [1], Q = \cpu.riscv.fifof_2.D_OUT [45], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13809 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1824.B_AND_S [2], Q = \cpu.riscv.fifof_2.D_OUT [44], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13805 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1820.B_AND_S [3], Q = \cpu.riscv.fifof_2.D_OUT [40], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$13804 ($_DFFE_PP_) from module mkeclass_axi4 (D = $flatten\cpu.\riscv.\stage1.\instance_decoder_func_32_1.$procmux$1820.Y_B [0], Q = \cpu.riscv.fifof_2.D_OUT [39], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11107 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11139 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11644 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11695 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11951 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$11993 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12058 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12157 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12189 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12321 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12487 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13194 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13698 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4503 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4637 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4990 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5031 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5105 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5233 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5679 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5881 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5938 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6118 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6284 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6609 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6707 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6739 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6883 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6947 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8038 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8547 ($_DFFE_PP_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$8739 ($_DFFE_PP_) from module mkeclass_axi4.

33.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 10 unused cells and 5 unused wires.
<suppressed ~12 debug messages>

33.32.10. Rerunning OPT passes. (Removed registers in this run.)

33.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~62 debug messages>

33.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

33.32.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$17121 ($_SDFFCE_PN0P_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$17122 ($_SDFFCE_PN0P_) from module mkeclass_axi4.

33.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

33.32.15. Rerunning OPT passes. (Removed registers in this run.)

33.32.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~2 debug messages>

33.32.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.32.18. Executing OPT_DFF pass (perform DFF optimizations).

33.32.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.32.20. Finished fast OPT passes.

33.33. Executing ICE40_OPT pass (performing simple optimizations).

33.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3391.slice[0].carry: CO=\led_counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3496.slice[0].carry: CO=\cpu.riscv.stage1.rg_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3499.slice[0].carry: CO=\cpu.riscv.stage1.rg_fabric_request [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3502.slice[0].carry: CO=\cpu.riscv.stage1.rg_index [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3517.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3370.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3526.slice[0].carry: CO=\uart_bridge.baud_counter [0]

33.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~350 debug messages>

33.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$13855 ($_DFFE_PP0P_) from module mkeclass_axi4.

33.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

33.33.6. Rerunning OPT passes. (Removed registers in this run.)

33.33.7. Running ICE40 specific optimizations.

33.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.33.10. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12771 ($_DFFE_PN0P_) from module mkeclass_axi4.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$12980 ($_DFFE_PN0P_) from module mkeclass_axi4.

33.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.33.12. Rerunning OPT passes. (Removed registers in this run.)

33.33.13. Running ICE40 specific optimizations.

33.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~63 debug messages>

33.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.33.16. Executing OPT_DFF pass (perform DFF optimizations).

33.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

33.33.18. Rerunning OPT passes. (Removed registers in this run.)

33.33.19. Running ICE40 specific optimizations.

33.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.33.22. Executing OPT_DFF pass (perform DFF optimizations).

33.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.33.24. Finished OPT passes. (There is nothing left to do.)

33.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

33.35. Executing TECHMAP pass (map to technology primitives).

33.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

33.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~704 debug messages>

33.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3391.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3496.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3499.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3502.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3517.slice[0].carry ($lut).
Mapping mkeclass_axi4.$auto$alumacc.cc:485:replace_alu$3526.slice[0].carry ($lut).

33.38. Executing ICE40_OPT pass (performing simple optimizations).

33.38.1. Running ICE40 specific optimizations.

33.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.
<suppressed ~192 debug messages>

33.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
<suppressed ~1068 debug messages>
Removed a total of 356 cells.

33.38.4. Executing OPT_DFF pass (perform DFF optimizations).

33.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..
Removed 0 unused cells and 4240 unused wires.
<suppressed ~1 debug messages>

33.38.6. Rerunning OPT passes. (Removed registers in this run.)

33.38.7. Running ICE40 specific optimizations.

33.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mkeclass_axi4.

33.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mkeclass_axi4'.
Removed a total of 0 cells.

33.38.10. Executing OPT_DFF pass (perform DFF optimizations).

33.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mkeclass_axi4..

33.38.12. Finished OPT passes. (There is nothing left to do.)

33.39. Executing TECHMAP pass (map to technology primitives).

33.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

33.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

33.40. Executing ABC pass (technology mapping using ABC).

33.40.1. Extracting gate netlist of module `\mkeclass_axi4' to `<abc-temp-dir>/input.blif'..
Extracted 2718 gates and 3429 wires to a netlist network with 709 inputs and 450 outputs.

33.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     794.
ABC: Participating nodes from both networks       =    1836.
ABC: Participating nodes from the first network   =     823. (  70.34 % of nodes)
ABC: Participating nodes from the second network  =    1013. (  86.58 % of nodes)
ABC: Node pairs (any polarity)                    =     823. (  70.34 % of names can be moved)
ABC: Node pairs (same polarity)                   =     604. (  51.62 % of names can be moved)
ABC: Total runtime =     0.16 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

33.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1169
ABC RESULTS:        internal signals:     2270
ABC RESULTS:           input signals:      709
ABC RESULTS:          output signals:      450
Removing temp directory.

33.41. Executing ICE40_WRAPCARRY pass (wrap carries).

33.42. Executing TECHMAP pass (map to technology primitives).

33.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

33.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 79 unused cells and 2302 unused wires.

33.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1343
  1-LUT               51
  2-LUT              222
  3-LUT              571
  4-LUT              499
  with \SB_CARRY    (#0)  181
  with \SB_CARRY    (#1)  181

Eliminating LUTs.
Number of LUTs:     1343
  1-LUT               51
  2-LUT              222
  3-LUT              571
  4-LUT              499
  with \SB_CARRY    (#0)  181
  with \SB_CARRY    (#1)  181

Combining LUTs.
Number of LUTs:     1312
  1-LUT               51
  2-LUT              220
  3-LUT              512
  4-LUT              529
  with \SB_CARRY    (#0)  181
  with \SB_CARRY    (#1)  181

Eliminated 0 LUTs.
Combined 31 LUTs.
<suppressed ~8691 debug messages>

33.44. Executing TECHMAP pass (map to technology primitives).

33.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

33.44.2. Continuing TECHMAP pass.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000111 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$7ee0028c4374eebfc180a68ee762b314b03436b0\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$1a64f21ea15b05b7fc930804a66f6689ebbd6394\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$162eacaa56f6f80a5a27551a5f2071c174364807\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$680fd8d179aaa2b94b3b7c0dab400ac18bb55c38\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod$e13d53d2f7f4329c814f78d8202f66066122bbc4\$lut for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$deb4f121bbf3d55ed9a98f692fd112e0918f51b5\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$a9334a4926470ce1833f9252e5e465c7b1118e6b\$lut for cells of type $lut.
Using template $paramod$35d201d5d13b0689930fb454a340191997b0e867\$lut for cells of type $lut.
Using template $paramod$6e87a29d18a99caa1dd7167449fef31e04ce86bc\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$fd2847bd008edd03070f42355fdb14fda0191818\$lut for cells of type $lut.
Using template $paramod$db17a9a11e777f7a9691b0c8dcc9d5785e9de410\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$b22c683f120cb753243eba26d1270a6ecf401c3b\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101111 for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$349b4548230399426bbcb0c9004ac92941aa8238\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$7c0fa5d918a8d4c0225ab4aa53f9d539c6d5bbda\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011100 for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$7614968db5bb082ee538195c00594779836d04ec\$lut for cells of type $lut.
Using template $paramod$4a51864395fae58ba30115ac09ca86f922da2001\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$b4c86683de329b1d5e65e43bb5a60d929bddd3da\$lut for cells of type $lut.
Using template $paramod$a55f1cd7dd899e453fe61d7ec95053334d858d41\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$32153e631d631e92a3500a3aa3fcdc9d64fca5ee\$lut for cells of type $lut.
Using template $paramod$9ae82cb0899316eb4c4ce93d82feab113df48247\$lut for cells of type $lut.
Using template $paramod$98d40e23bb57d56e14345fb0942003de3e361f25\$lut for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod$06a49eeef9c9c0ca3eeb308c4b5ee09a412d6201\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$ef6f9494c41321ef63579b1462fd44bdf781fd1c\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$5ab8703b1aa62946296547e85dc0a19366704a74\$lut for cells of type $lut.
Using template $paramod$7d45bd12c01d1778446c9474bd2c34ae7ad041ca\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$ecf9cac817e9cbb222dc9e58a122faf05f34c860\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011110 for cells of type $lut.
Using template $paramod$90edf8d4fe439b92725b09f66e94b5afc9f35376\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$5e10e6a328d7446862668936c2205352dd948176\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~3473 debug messages>
Removed 0 unused cells and 2965 unused wires.

33.45. Executing AUTONAME pass.
Renamed 49890 objects in module mkeclass_axi4 (93 iterations).
<suppressed ~2773 debug messages>

33.46. Executing HIERARCHY pass (managing design hierarchy).

33.46.1. Analyzing design hierarchy..
Top module:  \mkeclass_axi4

33.46.2. Analyzing design hierarchy..
Top module:  \mkeclass_axi4
Removed 0 unused modules.

33.47. Printing statistics.

=== mkeclass_axi4 ===

   Number of wires:               1536
   Number of wire bits:          14628
   Number of public wires:        1536
   Number of public wire bits:   14628
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2245
     SB_CARRY                      244
     SB_DFF                          4
     SB_DFFE                       184
     SB_DFFER                      406
     SB_DFFES                        1
     SB_DFFESR                      44
     SB_DFFESS                       3
     SB_DFFR                         2
     SB_DFFS                         1
     SB_DFFSR                       35
     SB_HFOSC                        1
     SB_LUT4                      1312
     SB_RAM40_4K                     8

33.48. Executing CHECK pass (checking for obvious problems).
Checking module mkeclass_axi4...
Found and reported 0 problems.

33.49. Executing JSON backend.

Warnings: 173 unique messages, 181 total
End of script. Logfile hash: 9fd0f3abac, CPU: user 16.39s system 0.09s, MEM: 70.02 MB peak
Yosys 0.33 (git sha1 2584903a060)
Time spent: 25% 7x techmap (4 sec), 17% 49x opt_expr (3 sec), ...
